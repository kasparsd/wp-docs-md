{
    "id": 10991,
    "date": "2014-09-18T03:12:09",
    "date_gmt": "2014-09-18T03:12:09",
    "guid": {
        "rendered": "http://developer.wordpress.org/?post_type=plugin-handbook&#038;p=10991"
    },
    "modified": "2024-03-27T22:56:31",
    "modified_gmt": "2024-03-27T22:56:31",
    "slug": "shortcodes-with-parameters",
    "status": "publish",
    "type": "plugin-handbook",
    "link": "https://developer.wordpress.org/plugins/shortcodes/shortcodes-with-parameters/",
    "title": {
        "rendered": "Shortcodes with Parameters"
    },
    "content": {
        "rendered": "\n<p>Now that we know how to create a <a href=\"https://developer.wordpress.org/plugins/shortcodes/basic-shortcodes/\">basic shortcode</a> and how to use it as <a href=\"https://developer.wordpress.org/plugins/shortcodes/enclosing-shortcodes/\">self-closing and enclosing</a>, we will look at using parameters in shortcode <code>[$tag]</code> and handler function.</p>\n\n\n\n<p>Shortcode <code>[$tag]</code> can accept parameters, known as attributes:</p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"php\" class=\"language-php\">[wporg title=\"WordPress.org\"]\nHaving fun with WordPress.org shortcodes.\n[/wporg]</code></pre>\n\n\n\n<p>Shortcode handler function can accept 3 parameters:</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li><code>$atts</code> &#8211; array &#8211; [$tag] attributes</li>\n\n\n\n<li><code>$content</code> &#8211; string &#8211; The content inside your shortcode. In the example above, it will be &#8220;Having fun with WordPress.org shortcodes.&#8221;</li>\n\n\n\n<li><code>$tag</code> &#8211; string &#8211; the name of the [$tag] (i.e. the name of the shortcode)</li>\n</ul>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"php\" class=\"language-php\">function wporg_shortcode( $atts = array(), $content = null, $tag = &apos;&apos; ) {}</code></pre>\n\n\n\n<h2 class=\"wp-block-heading\">Parsing Attributes</h2>\n\n\n\n<p>For the user, shortcodes are just strings with square brackets inside the post content. The user have no idea which attributes are available and what happens behind the scenes.</p>\n\n\n\n<p>For plugin developers, there is no way to enforce a policy on the use of attributes. The user may include one attribute, two or none at all.</p>\n\n\n\n<p>To gain control of how the shortcodes are used:</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li>Declare default parameters for the handler function</li>\n\n\n\n<li>Performing normalization of the key case for the attributes array with <a href=\"http://php.net/manual/en/function.array-change-key-case.php\">array_change_key_case()</a></li>\n\n\n\n<li>Parse attributes using <a href=\"https://developer.wordpress.org/reference/functions/shortcode_atts/\" rel=\"function\">shortcode_atts()</a>  providing default values array and user <code>$atts</code></li>\n\n\n\n<li><a href=\"https://developer.wordpress.org/plugins/security/securing-output/\">Secure the output</a> before returning it</li>\n</ul>\n\n\n\n<h2 class=\"wp-block-heading\">Complete Example</h2>\n\n\n\n<p>Complete example using a basic shortcode structure, taking care of self-closing and enclosing scenarios  and securing output.</p>\n\n\n\n<p>A <code>[wporg]</code> shortcode that will accept a title and will display a box that we can style with CSS.</p>\n\n\n\n<pre class=\"wp-block-code expanded\"><code lang=\"php\" class=\"language-php\">/**\n * The [wporg] shortcode.\n *\n * Accepts a title and will display a box.\n *\n * @param array  $atts    Shortcode attributes. Default empty.\n * @param string $content Shortcode content. Default null.\n * @param string $tag     Shortcode tag (name). Default empty.\n * @return string Shortcode output.\n */\nfunction wporg_shortcode( $atts = [], $content = null, $tag = &apos;&apos; ) {\n\t// normalize attribute keys, lowercase\n\t$atts = array_change_key_case( (array) $atts, CASE_LOWER );\n\n\t// override default attributes with user attributes\n\t$wporg_atts = shortcode_atts(\n\t\tarray(\n\t\t\t'title' =&gt; 'WordPress.org',\n\t\t), $atts, $tag\n\t);\n\n\t// start box\n\t$o = '&lt;div class=\"wporg-box\"&gt;';\n\n\t// title\n\t$o .= '&lt;h2&gt;' . esc_html( $wporg_atts['title'] ) . '&lt;/h2&gt;';\n\n\t// enclosing tags\n\tif ( ! is_null( $content ) ) {\n\t\t// $content here holds everything in between the opening and the closing tags of your shortcode. eg.g [my-shortcode]content[/my-shortcode].\n        // Depending on what your shortcode supports, you will parse and append the content to your output in different ways.\n\t\t// In this example, we just secure output by executing the_content filter hook on $content.\n\t\t$o .= apply_filters( 'the_content', $content );\n\t}\n\n\t// end box\n\t$o .= '&lt;/div&gt;';\n\n\t// return output\n\treturn $o;\n}\n\n/**\n * Central location to create all shortcodes.\n */\nfunction wporg_shortcodes_init() {\n\tadd_shortcode( 'wporg', 'wporg_shortcode' );\n}\n\nadd_action( 'init', 'wporg_shortcodes_init' );</code></pre>\n",
        "protected": false
    },
    "author": 12560283,
    "featured_media": 0,
    "parent": 10983,
    "menu_order": 0,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-10991",
        "plugin-handbook",
        "type-plugin-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/plugin-handbook/10991",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/plugin-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/plugin-handbook"
            }
        ],
        "author": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/users/12560283"
            }
        ],
        "version-history": [
            {
                "count": 22,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/plugin-handbook/10991/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 152905,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/plugin-handbook/10991/revisions/152905"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/plugin-handbook/10983"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=10991"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}