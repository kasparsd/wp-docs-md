{
    "id": 157133,
    "date": "2025-02-21T04:17:07",
    "date_gmt": "2025-02-21T04:17:07",
    "guid": {
        "rendered": "https://developer.wordpress.org/secure-custom-fields/code-reference/acf-helper-functions-file/"
    },
    "modified": "2025-06-23T10:16:13",
    "modified_gmt": "2025-06-23T10:16:13",
    "slug": "acf-helper-functions-file",
    "status": "publish",
    "type": "scf-handbook",
    "link": "https://developer.wordpress.org/secure-custom-fields/code-reference/acf-helper-functions-file/",
    "title": {
        "rendered": "Acf Helper Functions Global Functions"
    },
    "content": {
        "rendered": "<h2><code>acf_is_empty()</code></h2>\n<p>Returns true if the value provided is considered &#8220;empty&#8221;. Allows numbers such as 0.</p>\n<ul>\n<li>@date    6/7/16</li>\n<li>@since ACF 5.4.0</li>\n<li>@param   mixed $var The value to check.</li>\n<li>@return boolean</li>\n</ul>\n<h2><code>acf_not_empty()</code></h2>\n<p>Returns true if the value provided is considered &#8220;not empty&#8221;. Allows numbers such as 0.</p>\n<ul>\n<li>@date    15/7/19</li>\n<li>@since ACF 5.8.1</li>\n<li>@param   mixed $var The value to check.</li>\n<li>@return boolean</li>\n</ul>\n<h2><code>acf_uniqid()</code></h2>\n<p>Returns a unique numeric based id.</p>\n<ul>\n<li>@date    9/1/19</li>\n<li>@since ACF 5.7.10</li>\n<li>@param   string $prefix The id prefix. Defaults to &#8216;acf&#8217;.</li>\n<li>@return string</li>\n</ul>\n<h2><code>acf_merge_attributes()</code></h2>\n<p>Merges together two arrays but with extra functionality to append class names.</p>\n<ul>\n<li>@date    22/1/19</li>\n<li>@since ACF 5.7.10</li>\n<li>@param   array $array1 An array of attributes.</li>\n<li>@param array $array2 An array of attributes.</li>\n<li>@return array</li>\n</ul>\n<h2><code>acf_cache_key()</code></h2>\n<p>acf_cache_key</p>\n<ul>\n<li>Returns a filtered cache key.</li>\n<li>@date    25/1/19</li>\n<li>@since ACF 5.7.11</li>\n<li>@param   string $key The cache key.</li>\n<li>@return string</li>\n</ul>\n<h2><code>acf_request_args()</code></h2>\n<p>acf_request_args</p>\n<ul>\n<li>Returns an array of $_REQUEST values using the provided defaults.</li>\n<li>@date    28/2/19</li>\n<li>@since ACF 5.7.13</li>\n<li>@param   array $args An array of args.</li>\n<li>@return array</li>\n</ul>\n<h2><code>acf_request_arg()</code></h2>\n<p>Returns a single $_REQUEST arg with fallback.</p>\n<ul>\n<li>@date    23/10/20</li>\n<li>@since ACF 5.9.2</li>\n<li>@param   string $key     The property name.</li>\n<li>@param mixed  $default The default value to fallback to.</li>\n<li>@return mixed</li>\n</ul>\n<h2><code>acf_enable_filter()</code></h2>\n<p>acf_enable_filter</p>\n<ul>\n<li>Enables a filter with the given name.</li>\n<li>@date    14/7/16</li>\n<li>@since ACF 5.4.0</li>\n<li>@param   string $name The modifier name.</li>\n<li>@return void</li>\n</ul>\n<h2><code>acf_disable_filter()</code></h2>\n<p>acf_disable_filter</p>\n<ul>\n<li>Disables a filter with the given name.</li>\n<li>@date    14/7/16</li>\n<li>@since ACF 5.4.0</li>\n<li>@param   string $name The modifier name.</li>\n<li>@return void</li>\n</ul>\n<h2><code>acf_is_filter_enabled()</code></h2>\n<p>acf_is_filter_enabled</p>\n<ul>\n<li>Returns the state of a filter for the given name.</li>\n<li>@date    14/7/16</li>\n<li>@since ACF 5.4.0</li>\n<li>@param   string $name The modifier name.</li>\n<li>@return array</li>\n</ul>\n<h2><code>acf_get_filters()</code></h2>\n<p>acf_get_filters</p>\n<ul>\n<li>Returns an array of filters in their current state.</li>\n<li>@date    14/7/16</li>\n<li>@since ACF 5.4.0</li>\n<li>@return  array</li>\n</ul>\n<h2><code>acf_set_filters()</code></h2>\n<p>acf_set_filters</p>\n<ul>\n<li>Sets an array of filter states.</li>\n<li>@date    14/7/16</li>\n<li>@since ACF 5.4.0</li>\n<li>@param   array $filters An Array of modifiers.</li>\n<li>@return void</li>\n</ul>\n<h2><code>acf_disable_filters()</code></h2>\n<p>acf_disable_filters</p>\n<ul>\n<li>Disables all filters and returns the previous state.</li>\n<li>@date    14/7/16</li>\n<li>@since ACF 5.4.0</li>\n<li>@return  array</li>\n</ul>\n<h2><code>acf_enable_filters()</code></h2>\n<p>acf_enable_filters</p>\n<ul>\n<li>Enables all or an array of specific filters and returns the previous state.</li>\n<li>@date    14/7/16</li>\n<li>@since ACF 5.4.0</li>\n<li>@param   array $filters An Array of modifiers.</li>\n<li>@return array</li>\n</ul>\n<h2><code>acf_idval()</code></h2>\n<p>acf_idval</p>\n<ul>\n<li>Parses the provided value for an ID.</li>\n<li>@date    29/3/19</li>\n<li>@since ACF 5.7.14</li>\n<li>@param   mixed $value A value to parse.</li>\n<li>@return integer</li>\n</ul>\n<h2><code>acf_maybe_idval()</code></h2>\n<p>acf_maybe_idval</p>\n<ul>\n<li>Checks value for potential id value.</li>\n<li>@date    6/4/19</li>\n<li>@since ACF 5.7.14</li>\n<li>@param   mixed $value A value to parse.</li>\n<li>@return mixed</li>\n</ul>\n<h2><code>acf_format_numerics()</code></h2>\n<p>Convert any numeric strings into their equivalent numeric type. This function will<br />\nwork with both single values and arrays.</p>\n<ul>\n<li>@param mixed $value Either a single value or an array of values.</li>\n<li>@return mixed</li>\n</ul>\n<h2><code>acf_numval()</code></h2>\n<p>acf_numval</p>\n<ul>\n<li>Casts the provided value as eiter an int or float using a simple hack.</li>\n<li>@date    11/4/19</li>\n<li>@since ACF 5.7.14</li>\n<li>@param   mixed $value A value to parse.</li>\n<li>@return (int|float)</li>\n</ul>\n<h2><code>acf_idify()</code></h2>\n<p>acf_idify</p>\n<ul>\n<li>Returns an id attribute friendly string.</li>\n<li>@date    24/12/17</li>\n<li>@since ACF 5.6.5</li>\n<li>@param   string $str The string to convert.</li>\n<li>@return string</li>\n</ul>\n<h2><code>acf_slugify()</code></h2>\n<p>Returns a slug friendly string.</p>\n<ul>\n<li>@date    24/12/17</li>\n<li>@since ACF 5.6.5</li>\n<li>@param   string $str  The string to convert.</li>\n<li>@param string $glue The glue between each slug piece.</li>\n<li>@return string</li>\n</ul>\n<h2><code>acf_punctify()</code></h2>\n<p>Returns a string with correct full stop punctuation.</p>\n<ul>\n<li>@date    12/7/19</li>\n<li>@since ACF 5.8.2</li>\n<li>@param   string $str The string to format.</li>\n<li>@return string</li>\n</ul>\n<h2><code>acf_did()</code></h2>\n<p>acf_did</p>\n<ul>\n<li>Returns true if ACF already did an event.</li>\n<li>@date    30/8/19</li>\n<li>@since ACF 5.8.1</li>\n<li>@param   string $name The name of the event.</li>\n<li>@return boolean</li>\n</ul>\n<h2><code>acf_strlen()</code></h2>\n<p>Returns the length of a string that has been submitted via $_POST.</p>\n<ul>\n<li>Uses the following process:</li>\n</ul>\n<ol>\n<li>Unslash the string because posted values will be slashed.</li>\n<li>Decode special characters because <a href=\"https://developer.wordpress.org/reference/functions/wp_kses/\" rel=\"function\">wp_kses()</a>  will normalize entities.</li>\n<li>Treat line-breaks as a single character instead of two.</li>\n<li>Use mb_strlen() to accommodate special characters.</li>\n</ol>\n<ul>\n<li>@date    04/06/2020</li>\n<li>@since ACF 5.9.0</li>\n<li>@param   string $str The string to review.</li>\n<li>@return integer</li>\n</ul>\n<h2><code>acf_with_default()</code></h2>\n<p>Returns a value with default fallback.</p>\n<ul>\n<li>@date    6/4/20</li>\n<li>@since ACF 5.9.0</li>\n<li>@param   mixed $value         The value.</li>\n<li>@param mixed $default_value The default value.</li>\n<li>@return mixed</li>\n</ul>\n<h2><code>acf_doing_action()</code></h2>\n<p>Returns the current priority of a running action.</p>\n<ul>\n<li>@date    14/07/2020</li>\n<li>@since ACF 5.9.0</li>\n<li>@param   string $action The action name.</li>\n<li>@return integer|boolean</li>\n</ul>\n<h2><code>acf_get_current_url()</code></h2>\n<p>Returns the current URL.</p>\n<ul>\n<li>@date    23/01/2015</li>\n<li>@since ACF 5.1.5</li>\n<li>@return  string</li>\n</ul>\n<h2><code>acf_sanitize_request_args()</code></h2>\n<p>Sanitizes request arguments.</p>\n<ul>\n<li>@param mixed $args The data to sanitize.</li>\n<li>@return array|boolean|float|integer|mixed|string</li>\n</ul>\n<h2><code>acf_sanitize_files_array()</code></h2>\n<p>Sanitizes file upload arrays.</p>\n<ul>\n<li>@since ACF 6.0.4</li>\n<li>@param array $args The file array.</li>\n<li>@return array</li>\n</ul>\n<h2><code>acf_sanitize_files_value_array()</code></h2>\n<p>Sanitizes file upload values within the array.</p>\n<ul>\n<li>This addresses nested file fields within repeaters and groups.</li>\n<li>@since ACF 6.0.5</li>\n<li>@param array  $array             The file upload array.</li>\n<li>@param string $sanitize_function Callback used to sanitize array value.</li>\n<li>@return array</li>\n</ul>\n<h2><code>acf_maybe_unserialize()</code></h2>\n<p>Maybe unserialize, but don&#8217;t allow any classes.</p>\n<ul>\n<li>@since ACF 6.1</li>\n<li>@param string $data String to be unserialized, if serialized.</li>\n<li>@return mixed The unserialized, or original data.</li>\n</ul>\n<h2><code>acf_is_beta()</code></h2>\n<p>Check if ACF is a beta-like release.</p>\n<ul>\n<li>@since ACF 6.3</li>\n<li>@return boolean True if the current install version contains a dash, indicating a alpha, beta or RC release.</li>\n</ul>\n<h2><code>acf_get_version_when_first_activated()</code></h2>\n<p>Returns the version of ACF when it was first activated.<br />\nHowever, if ACF was first activated prior to the introduction of the acf_first_activated_version option,<br />\nthis function returns false (boolean) to indicate that the version could not be determined.</p>\n<ul>\n<li>@since ACF 6.3</li>\n<li>@return string|boolean The (string) version of ACF when it was first activated, or false (boolean) if the version could not be determined.</li>\n</ul>\n<hr />\n",
        "protected": false
    },
    "author": 0,
    "featured_media": 0,
    "parent": 157128,
    "menu_order": 0,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-157133",
        "scf-handbook",
        "type-scf-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/scf-handbook/157133",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/scf-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/scf-handbook"
            }
        ],
        "version-history": [
            {
                "count": 4,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/scf-handbook/157133/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 159014,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/scf-handbook/157133/revisions/159014"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/scf-handbook/157128"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=157133"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}