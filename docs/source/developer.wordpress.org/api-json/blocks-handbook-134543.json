{
    "id": 134543,
    "date": "2021-03-09T08:38:22",
    "date_gmt": "2021-03-09T08:38:22",
    "guid": {
        "rendered": "https://developer.wordpress.org/block-editor/reference-guides/packages/packages-custom-templated-path-webpack-plugin/"
    },
    "modified": "2023-03-06T10:59:41",
    "modified_gmt": "2023-03-06T10:59:41",
    "slug": "packages-custom-templated-path-webpack-plugin",
    "status": "publish",
    "type": "blocks-handbook",
    "link": "https://developer.wordpress.org/block-editor/reference-guides/packages/packages-custom-templated-path-webpack-plugin/",
    "title": {
        "rendered": "@wordpress/custom-templated-path-webpack-plugin"
    },
    "content": {
        "rendered": "<blockquote><p>\n  <strong>DEPRECATED for webpack v5</strong>: please use <a href=\"https://webpack.js.org/configuration/output/#outputfilename\"><code>output.filename</code></a> instead.\n</p></blockquote>\n<p>Webpack plugin for creating custom path template tags. Extend the <a href=\"https://webpack.js.org/configuration/output/#output-filename\">default set of template tags</a> with your own custom behavior. Hooks into Webpack&#8217;s compilation process to allow you to replace tags with a substitute value.</p>\n<h2>Installation</h2>\n<p>Install the module</p>\n<pre><code class=\"language-bash\">npm install @wordpress/custom-templated-path-webpack-plugin --save-dev\n</code></pre>\n<p><strong>Note</strong>: This package requires Node.js 12.0.0 or later. It is not compatible with older versions. It works only with webpack v4.</p>\n<h2>Usage</h2>\n<p>Construct an instance of <code>CustomTemplatedPathPlugin</code> in your Webpack configurations <code>plugins</code> entry, passing an object where keys correspond to the template tag name. The value for each key is a function passed the original intended path and data corresponding to the asset.</p>\n<p>The following example creates a new <code>basename</code> tag to substitute the basename of each entry file in the build output file. When compiled, the built file will be output as <code>build-entry.js</code>.</p>\n<pre><code class=\"language-js\">const { basename } = require( 'path' );\nconst CustomTemplatedPathPlugin = require( '@wordpress/custom-templated-path-webpack-plugin' );\n\nmodule.exports = {\n    // ...\n\n    entry: './entry',\n\n    output: {\n        filename: 'build-[basename].js',\n    },\n\n    plugins: [\n        new CustomTemplatedPathPlugin( {\n            basename( path, data ) {\n                let rawRequest;\n\n                const entryModule = get( data, [ 'chunk', 'entryModule' ], {} );\n                switch ( entryModule.type ) {\n                    case 'javascript/auto':\n                        rawRequest = entryModule.rawRequest;\n                        break;\n\n                    case 'javascript/esm':\n                        rawRequest = entryModule.rootModule.rawRequest;\n                        break;\n                }\n\n                if ( rawRequest ) {\n                    return basename( rawRequest );\n                }\n\n                return path;\n            },\n        } ),\n    ],\n};\n</code></pre>\n<p>For more examples, refer to Webpack&#8217;s own <a href=\"https://github.com/webpack/webpack/blob/v4.1.1/lib/TemplatedPathPlugin.js\"><code>TemplatedPathPlugin.js</code></a>, which implements the base set of template tags.</p>\n<h2>Contributing to this package</h2>\n<p>This is an individual package that&#8217;s part of the Gutenberg project. The project is organized as a monorepo. It&#8217;s made up of multiple self-contained software packages, each with a specific purpose. The packages in this monorepo are published to <a href=\"https://www.npmjs.com/\">npm</a> and used by <a href=\"https://make.wordpress.org/core/\">WordPress</a> as well as other software projects.</p>\n<p>To find out more about contributing to this package or Gutenberg as a whole, please read the project&#8217;s main <a href=\"https://github.com/WordPress/gutenberg/tree/HEAD/CONTRIBUTING.md\">contributor guide</a>.</p>\n",
        "protected": false
    },
    "author": 0,
    "featured_media": 0,
    "parent": 134521,
    "menu_order": 250,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-134543",
        "blocks-handbook",
        "type-blocks-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134543",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/blocks-handbook"
            }
        ],
        "version-history": [
            {
                "count": 6,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134543/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 145047,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134543/revisions/145047"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134521"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=134543"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}