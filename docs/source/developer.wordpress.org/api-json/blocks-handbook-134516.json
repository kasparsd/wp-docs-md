{
    "id": 134516,
    "date": "2021-03-09T08:38:22",
    "date_gmt": "2021-03-09T08:38:22",
    "guid": {
        "rendered": "https://developer.wordpress.org/block-editor/reference-guides/components/tooltip/"
    },
    "modified": "2024-10-30T16:55:35",
    "modified_gmt": "2024-10-30T16:55:35",
    "slug": "tooltip",
    "status": "publish",
    "type": "blocks-handbook",
    "link": "https://developer.wordpress.org/block-editor/reference-guides/components/tooltip/",
    "title": {
        "rendered": "Tooltip"
    },
    "content": {
        "rendered": "<p>Tooltip is a React component to render floating help text relative to a node when it receives focus or it is hovered upon by a mouse. If the tooltip exceeds the bounds of the page in the direction it opens, its position will be flipped automatically.</p>\n<h2>Usage</h2>\n<p>Render a Tooltip, passing as a child the element to which it should anchor:</p>\n<pre><code class=\"language-jsx\">import { Tooltip } from '@wordpress/components';\n\nconst MyTooltip = () =&gt; (\n    &lt;Tooltip text=\"More information\"&gt;\n        &lt;div&gt;Hover for more information&lt;/div&gt;\n    &lt;/Tooltip&gt;\n);\n</code></pre>\n<h3>Nested tooltips</h3>\n<p>In case one or more <code>Tooltip</code> components are rendered inside another <code>Tooltip</code> component, only the tooltip associated to the outermost <code>Tooltip</code> component will be rendered in the browser and shown to the user appropriately. The rest of the nested <code>Tooltip</code> components will simply no-op and pass-through their anchor.</p>\n<h2>Props</h2>\n<p>The component accepts the following props:</p>\n<h4><code>children</code>: <code>React.ReactElement</code></h4>\n<p>The element to which the tooltip should anchor.</p>\n<p><strong>NOTE:</strong> Accepts only one child element.</p>\n<ul>\n<li>Required: Yes</li>\n</ul>\n<h4><code>delay</code>: <code>number</code></h4>\n<p>The amount of time in milliseconds to wait before showing the tooltip.</p>\n<ul>\n<li>Required: No</li>\n<li>Default: <code>700</code></li>\n</ul>\n<h4><code>hideOnClick</code>: <code>boolean</code></h4>\n<p>Option to hide the tooltip when the anchor is clicked.</p>\n<ul>\n<li>Required: No</li>\n<li>Default: <code>true</code></li>\n</ul>\n<h4><code>placement</code>: <code>'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end'</code></h4>\n<p>Used to specify the tooltip&#8217;s placement with respect to its anchor.</p>\n<ul>\n<li>Required: No</li>\n<li>Default: <code>'bottom'</code></li>\n</ul>\n<h4><code>position</code>: <code>string</code></h4>\n<p><em>Note: use the <code>placement</code> prop instead when possible.</em></p>\n<p>Legacy way to specify the popover&#8217;s position with respect to its anchor. Specify y- and x-axis as a space-separated string. Supports <code>'top'</code>, <code>'middle'</code>, <code>'bottom'</code> y axis, and <code>'left'</code>, <code>'center'</code>, <code>'right'</code> x axis.</p>\n<ul>\n<li>Required: No</li>\n<li>Default: <code>'bottom'</code></li>\n</ul>\n<h4><code>shortcut</code>: <code>string</code> | <code>object</code></h4>\n<p>An option for adding accessible keyboard shortcuts.</p>\n<p>If shortcut is a string, it is expecting the display text. If shortcut is an object, it will accept the properties of <code>display</code>: <code>string</code> and <code>ariaLabel</code>: <code>string</code>.</p>\n<ul>\n<li>Required: No</li>\n</ul>\n<h4><code>text</code>: <code>string</code></h4>\n<p>The text shown in the tooltip when anchor element is focused or hovered.</p>\n<ul>\n<li>Required: No</li>\n</ul>\n",
        "protected": false
    },
    "author": 0,
    "featured_media": 0,
    "parent": 134435,
    "menu_order": 226,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-134516",
        "blocks-handbook",
        "type-blocks-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134516",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/blocks-handbook"
            }
        ],
        "version-history": [
            {
                "count": 13,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134516/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 151556,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134516/revisions/151556"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134435"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=134516"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}