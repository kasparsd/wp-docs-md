{
    "id": 10989,
    "date": "2014-09-18T03:10:22",
    "date_gmt": "2014-09-18T03:10:22",
    "guid": {
        "rendered": "http://developer.wordpress.org/?post_type=plugin-handbook&#038;p=10989"
    },
    "modified": "2022-11-17T07:13:10",
    "modified_gmt": "2022-11-17T07:13:10",
    "slug": "enclosing-shortcodes",
    "status": "publish",
    "type": "plugin-handbook",
    "link": "https://developer.wordpress.org/plugins/shortcodes/enclosing-shortcodes/",
    "title": {
        "rendered": "Enclosing Shortcodes"
    },
    "content": {
        "rendered": "\n<p>The are two scenarios for using shortcodes:</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li>The shortcode is a self-closing tag like we seen in the <a href=\"https://developer.wordpress.org/plugins/shortcodes/basic-shortcodes/\">Basic Shortcodes</a> section.</li>\n\n\n\n<li>The shortcode is enclosing content.</li>\n</ul>\n\n\n\n<h2 class=\"wp-block-heading\">Enclosing Content</h2>\n\n\n\n<p>Enclosing content with a shortcode allows manipulations on the enclosed content.</p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"php\" class=\"language-php\">[wporg]content to manipulate[/wporg]</code></pre>\n\n\n\n<p>As seen above, all you need to do in order to enclose a section of content is add a beginning <code>[$tag]</code> and an end <code>[/$tag]</code>, similar to HTML.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Processing Enclosed Content</h2>\n\n\n\n<p>Lets get back to our original [wporg] shortcode code:</p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"php\" class=\"language-php\">function wporg_shortcode( $atts = array(), $content = null ) {\n    // do something to $content\n    // always return\n    return $content;\n}\nadd_shortcode( 'wporg', 'wporg_shortcode' );</code></pre>\n\n\n\n<p>Looking at the callback function we see that we chose to accept two parameters, <code>$atts</code> and <code>$content</code>. The <code>$content</code> parameter is going to hold our enclosed content. We will talk about <code>$atts</code> later.</p>\n\n\n\n<p>The default value of <code>$content</code> is set to <code>null</code> so we can differentiate between a self-closing tag and enclosing tags by using PHP function <a href=\"http://php.net/is_null\">is_null()</a>.</p>\n\n\n\n<p>The shortcode <code>[$tag]</code>, including its content and the end <code>[/$tag]</code> will be replaced with the <strong>return value</strong> of the handler function.</p>\n\n\n\n<div class=\"wp-block-wporg-notice is-alert-notice\">\n<div class=\"wp-block-wporg-notice__icon\"></div>\n<div class=\"wp-block-wporg-notice__content\"><br />\nIt is the responsibility of the handler function to <a href=\"https://developer.wordpress.org/plugins/security/securing-output/\">secure the output</a>.<br />\n</div></div>\n\n\n\n\n<h2 class=\"wp-block-heading\">Shortcode-ception</h2>\n\n\n\n<p>The shortcode parser performs a <strong>single pass</strong> on the content of the post.</p>\n\n\n\n<p>This means that if the <code>$content</code> parameter of a shortcode handler contains another shortcode, it won&#8217;t be parsed. In this example, <code>[shortcode]</code> will not be processed:</p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"php\" class=\"language-php\">[wporg]another [shortcode] is included[/wporg]</code></pre>\n\n\n\n<p>Using shortcodes inside other shortcodes is possible by calling <code>do_shortcode()</code> on the <strong>final return value</strong> of the handler function.</p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"php\" class=\"language-php\"><pre class=\"wp-block-syntaxhighlighter-code\">function wporg_shortcode( $atts = array(), $content = null ) {\n\t// do something to $content\n\t// run shortcode parser recursively\n\t$content = do_shortcode( $content );\n\t// always return\n\treturn $content;\n}\nadd_shortcode( 'wporg', 'wporg_shortcode' );</pre></code></pre>\n\n\n\n<h2 class=\"wp-block-heading\">Limitations</h2>\n\n\n\n<p>The shortcode parser is unable to handle mixing of enclosing and non-enclosing forms of the same <code>[$tag]</code>.</p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"php\" class=\"language-php\">[wporg] non-enclosed content [wporg]enclosed content[/wporg]</code></pre>\n\n\n\n<p>Instead of being treated as two shortcodes separated by the text &#8220;<code>non-enclosed content</code>&#8220;, the parser treats this as a single shortcode enclosing &#8220;<code>non-enclosed content [wporg]enclosed content</code>&#8220;.</p>\n",
        "protected": false
    },
    "author": 12560283,
    "featured_media": 0,
    "parent": 10983,
    "menu_order": 0,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-10989",
        "plugin-handbook",
        "type-plugin-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/plugin-handbook/10989",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/plugin-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/plugin-handbook"
            }
        ],
        "author": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/users/12560283"
            }
        ],
        "version-history": [
            {
                "count": 15,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/plugin-handbook/10989/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 144426,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/plugin-handbook/10989/revisions/144426"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/plugin-handbook/10983"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=10989"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}