{
    "id": 141745,
    "date": "2022-07-26T12:54:48",
    "date_gmt": "2022-07-26T12:54:48",
    "guid": {
        "rendered": "https://developer.wordpress.org/block-editor/reference-guides/data/data-core-customize-widgets/"
    },
    "modified": "2025-07-08T10:15:35",
    "modified_gmt": "2025-07-08T10:15:35",
    "slug": "data-core-customize-widgets",
    "status": "publish",
    "type": "blocks-handbook",
    "link": "https://developer.wordpress.org/block-editor/reference-guides/data/data-core-customize-widgets/",
    "title": {
        "rendered": "Customize Widgets"
    },
    "content": {
        "rendered": "<p>Namespace: <code>core/customize-widgets</code>.</p>\n<h2>Selectors</h2>\n<p><!-- START TOKEN(Autogenerated selectors|../../../packages/customize-widgets/src/store/selectors.js) --></p>\n<h3>isInserterOpened</h3>\n<p>Returns true if the inserter is opened.</p>\n<p><em>Usage</em></p>\n<pre><code class=\"language-js\">import { store as customizeWidgetsStore } from '@wordpress/customize-widgets';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\n\nconst ExampleComponent = () =&gt; {\n    const { isInserterOpened } = useSelect(\n        ( select ) =&gt; select( customizeWidgetsStore ),\n        []\n    );\n\n    return isInserterOpened()\n        ? __( 'Inserter is open' )\n        : __( 'Inserter is closed.' );\n};\n</code></pre>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether the inserter is opened.</li>\n</ul>\n<p><!-- END TOKEN(Autogenerated selectors|../../../packages/customize-widgets/src/store/selectors.js) --></p>\n<h2>Actions</h2>\n<p><!-- START TOKEN(Autogenerated actions|../../../packages/customize-widgets/src/store/actions.js) --></p>\n<h3>setIsInserterOpened</h3>\n<p>Returns an action object used to open/close the inserter.</p>\n<p><em>Usage</em></p>\n<pre><code class=\"language-js\">import { useState } from 'react';\nimport { store as customizeWidgetsStore } from '@wordpress/customize-widgets';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch } from '@wordpress/data';\nimport { Button } from '@wordpress/components';\n\nconst ExampleComponent = () =&gt; {\n    const { setIsInserterOpened } = useDispatch( customizeWidgetsStore );\n    const [ isOpen, setIsOpen ] = useState( false );\n\n    return (\n        &lt;Button\n            onClick={ () =&gt; {\n                setIsInserterOpened( ! isOpen );\n                setIsOpen( ! isOpen );\n            } }\n        &gt;\n            { __( 'Open/close inserter' ) }\n        &lt;/Button&gt;\n    );\n};\n</code></pre>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>value</em> <code>boolean|Object</code>: Whether the inserter should be opened (true) or closed (false). To specify an insertion point, use an object.</li>\n<li><em>value.rootClientId</em> <code>string</code>: The root client ID to insert at.</li>\n<li><em>value.insertionIndex</em> <code>number</code>: The index to insert at.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Object</code>: Action object.</li>\n</ul>\n<p><!-- END TOKEN(Autogenerated actions|../../../packages/customize-widgets/src/store/actions.js) --></p>\n",
        "protected": false
    },
    "author": 0,
    "featured_media": 0,
    "parent": 134606,
    "menu_order": 343,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-141745",
        "blocks-handbook",
        "type-blocks-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/141745",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/blocks-handbook"
            }
        ],
        "version-history": [
            {
                "count": 4,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/141745/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 151684,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/141745/revisions/151684"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134606"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=141745"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}