{
    "id": 135766,
    "date": "2021-04-30T10:09:48",
    "date_gmt": "2021-04-30T10:09:48",
    "guid": {
        "rendered": "https://developer.wordpress.org/block-editor/reference-guides/components/truncate/"
    },
    "modified": "2024-10-30T16:55:02",
    "modified_gmt": "2024-10-30T16:55:02",
    "slug": "truncate",
    "status": "publish",
    "type": "blocks-handbook",
    "link": "https://developer.wordpress.org/block-editor/reference-guides/components/truncate/",
    "title": {
        "rendered": "Truncate"
    },
    "content": {
        "rendered": "<div class=\"callout callout-alert\">\nThis feature is still experimental. \u201cExperimental\u201d means this is an early implementation subject to drastic and breaking changes.\n</div>\n<p><code>Truncate</code> is a typography primitive that trims text content. For almost all cases, it is recommended that <code>Text</code>, <code>Heading</code>, or <code>Subheading</code> is used to render text content. However, <code>Truncate</code> is available for custom implementations.</p>\n<h2>Usage</h2>\n<pre><code class=\"language-jsx\">import { __experimentalTruncate as Truncate } from '@wordpress/components';\n\nfunction Example() {\n    return (\n        &lt;Truncate&gt;\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex\n            neque, vulputate a diam et, luctus convallis lacus. Vestibulum ac\n            mollis mi. Morbi id elementum massa.\n        &lt;/Truncate&gt;\n    );\n}\n</code></pre>\n<h2>Props</h2>\n<h3><code>children</code>: <code>ReactNode</code></h3>\n<p>The children elements.</p>\n<p>Note: text truncation will be attempted only if the <code>children</code> are either of type <code>string</code> or <code>number</code>. In any other scenarios, the component will not attempt to truncate the text, and will pass through the <code>children</code>.</p>\n<ul>\n<li>Required: Yes</li>\n</ul>\n<h3><code>ellipsis</code>: <code>string</code></h3>\n<p>The ellipsis string when truncating the text by the <code>limit</code> prop&#8217;s value.</p>\n<ul>\n<li>Required: No</li>\n<li>Default: <code>\u2026</code></li>\n</ul>\n<h3><code>ellipsizeMode</code>: <code>'auto' | 'head' | 'tail' | 'middle' | 'none'</code></h3>\n<p>Determines where to truncate. For example, we can truncate text right in the middle. To do this, we need to set <code>ellipsizeMode</code> to <code>middle</code> and a text <code>limit</code>.</p>\n<ul>\n<li><code>auto</code>: Trims content at the end automatically without a <code>limit</code>.</li>\n<li><code>head</code>: Trims content at the beginning. Requires a <code>limit</code>.</li>\n<li><code>middle</code>: Trims content in the middle. Requires a <code>limit</code>.</li>\n<li><code>tail</code>: Trims content at the end. Requires a <code>limit</code>.</p>\n</li>\n<li>\n<p>Required: No</p>\n</li>\n<li>Default: <code>auto</code></li>\n</ul>\n<h3><code>limit</code>: <code>number</code></h3>\n<p>Determines the max number of characters to be displayed before the rest of the text gets truncated. Requires <code>ellipsizeMode</code> to assume values different from <code>auto</code> and <code>none</code>.</p>\n<ul>\n<li>Required: No</li>\n<li>Default: <code>0</code></li>\n</ul>\n<h3><code>numberOfLines</code>: <code>number</code></h3>\n<p>Clamps the text content to the specified <code>numberOfLines</code>, adding an ellipsis at the end. Note: this feature ignores the value of the <code>ellipsis</code> prop and always displays the default <code>\u2026</code> ellipsis.</p>\n<ul>\n<li>Required: No</li>\n<li>Default: <code>0</code></li>\n</ul>\n<pre><code class=\"language-jsx\">import { __experimentalTruncate as Truncate } from '@wordpress/components';\n\nfunction Example() {\n    return (\n        &lt;Truncate numberOfLines={ 2 }&gt;\n            Where the north wind meets the sea, there's a river full of memory.\n            Sleep, my darling, safe and sound, for in this river all is found.\n            In her waters, deep and true, lay the answers and a path for you.\n            Dive down deep into her sound, but not too far or you'll be drowned\n        &lt;/Truncate&gt;\n    );\n}\n</code></pre>\n",
        "protected": false
    },
    "author": 0,
    "featured_media": 0,
    "parent": 134435,
    "menu_order": 229,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-135766",
        "blocks-handbook",
        "type-blocks-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/135766",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/blocks-handbook"
            }
        ],
        "version-history": [
            {
                "count": 9,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/135766/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 152713,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/135766/revisions/152713"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134435"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=135766"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}