{
    "id": 134612,
    "date": "2021-03-09T08:38:24",
    "date_gmt": "2021-03-09T08:38:24",
    "guid": {
        "rendered": "https://developer.wordpress.org/block-editor/reference-guides/data/data-core-edit-post/"
    },
    "modified": "2025-07-08T10:15:53",
    "modified_gmt": "2025-07-08T10:15:53",
    "slug": "data-core-edit-post",
    "status": "publish",
    "type": "blocks-handbook",
    "link": "https://developer.wordpress.org/block-editor/reference-guides/data/data-core-edit-post/",
    "title": {
        "rendered": "The Editor\u2019s UI Data"
    },
    "content": {
        "rendered": "<p>Namespace: <code>core/edit-post</code>.</p>\n<h2>Selectors</h2>\n<p><!-- START TOKEN(Autogenerated selectors|../../../packages/edit-post/src/store/selectors.js) --></p>\n<h3>areMetaBoxesInitialized</h3>\n<p>Returns true if meta boxes are initialized.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether meta boxes are initialized.</li>\n</ul>\n<h3>getActiveGeneralSidebarName</h3>\n<p>Returns the current active general sidebar name, or null if there is no general sidebar active. The active general sidebar is a unique name to identify either an editor or plugin sidebar.</p>\n<p>Examples:</p>\n<ul>\n<li><code>edit-post/document</code></li>\n<li><code>my-plugin/insert-image-sidebar</code></li>\n</ul>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>?string</code>: Active general sidebar name.</li>\n</ul>\n<h3>getActiveMetaBoxLocations</h3>\n<p>Returns an array of active meta box locations.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Post editor state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>string[]</code>: Active meta box locations.</li>\n</ul>\n<h3>getAllMetaBoxes</h3>\n<p>Returns the list of all the available meta boxes.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Array</code>: List of meta boxes.</li>\n</ul>\n<h3>getEditedPostTemplate</h3>\n<p>Retrieves the template of the currently edited post.</p>\n<p><em>Returns</em></p>\n<ul>\n<li><code>?Object</code>: Post Template.</li>\n</ul>\n<h3>getEditorMode</h3>\n<p>Returns the current editing mode.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>string</code>: Editing mode.</li>\n</ul>\n<h3>getHiddenBlockTypes</h3>\n<p>Returns an array of blocks that are hidden.</p>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Array</code>: A list of the hidden block types</li>\n</ul>\n<h3>getMetaBoxesPerLocation</h3>\n<p>Returns the list of all the available meta boxes for a given location.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n<li><em>location</em> <code>string</code>: Meta box location to test.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>?Array</code>: List of meta boxes.</li>\n</ul>\n<h3>getPreference</h3>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n<li><em>preferenceKey</em> <code>string</code>: Preference Key.</li>\n<li><em>defaultValue</em> <code>*</code>: Default Value.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>*</code>: Preference Value.</li>\n</ul>\n<h3>getPreferences</h3>\n<p>Returns the preferences (these preferences are persisted locally).</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Object</code>: Preferences Object.</li>\n</ul>\n<h3>hasMetaBoxes</h3>\n<p>Returns true if the post is using Meta Boxes</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether there are metaboxes or not.</li>\n</ul>\n<h3>isEditingTemplate</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns true if the template editing mode is enabled.</p>\n<h3>isEditorPanelEnabled</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns true if the given panel is enabled, or false otherwise. Panels are enabled by default.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n<li><em>panelName</em> <code>string</code>: A string that identifies the panel.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether or not the panel is enabled.</li>\n</ul>\n<h3>isEditorPanelOpened</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns true if the given panel is open, or false otherwise. Panels are closed by default.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n<li><em>panelName</em> <code>string</code>: A string that identifies the panel.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether or not the panel is open.</li>\n</ul>\n<h3>isEditorPanelRemoved</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns true if the given panel was programmatically removed, or false otherwise. All panels are not removed by default.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n<li><em>panelName</em> <code>string</code>: A string that identifies the panel.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether or not the panel is removed.</li>\n</ul>\n<h3>isEditorSidebarOpened</h3>\n<p>Returns true if the editor sidebar is opened.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether the editor sidebar is opened.</li>\n</ul>\n<h3>isFeatureActive</h3>\n<p>Returns whether the given feature is enabled or not.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n<li><em>feature</em> <code>string</code>: Feature slug.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Is active.</li>\n</ul>\n<h3>isInserterOpened</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns true if the inserter is opened.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether the inserter is opened.</li>\n</ul>\n<h3>isListViewOpened</h3>\n<p>Returns true if the list view is opened.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether the list view is opened.</li>\n</ul>\n<h3>isMetaBoxLocationActive</h3>\n<p>Returns true if there is an active meta box in the given location, or false otherwise.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Post editor state.</li>\n<li><em>location</em> <code>string</code>: Meta box location to test.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether the meta box location is active.</li>\n</ul>\n<h3>isMetaBoxLocationVisible</h3>\n<p>Returns true if a metabox location is active and visible</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Post editor state.</li>\n<li><em>location</em> <code>string</code>: Meta box location to test.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether the meta box location is active and visible.</li>\n</ul>\n<h3>isModalActive</h3>\n<blockquote><p>\n  <strong>Deprecated</strong> since WP 6.3 use <code>core/interface</code> store&#8217;s selector with the same name instead.\n</p></blockquote>\n<p>Returns true if a modal is active, or false otherwise.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n<li><em>modalName</em> <code>string</code>: A string that uniquely identifies the modal.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether the modal is active.</li>\n</ul>\n<h3>isPluginItemPinned</h3>\n<p>Returns true if the plugin item is pinned to the header. When the value is not set it defaults to true.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n<li><em>pluginName</em> <code>string</code>: Plugin item name.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether the plugin item is pinned.</li>\n</ul>\n<h3>isPluginSidebarOpened</h3>\n<p>Returns true if the plugin sidebar is opened.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether the plugin sidebar is opened.</li>\n</ul>\n<h3>isPublishSidebarOpened</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns true if the publish sidebar is opened.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether the publish sidebar is open.</li>\n</ul>\n<h3>isSavingMetaBoxes</h3>\n<p>Returns true if the Meta Boxes are being saved.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>Object</code>: Global application state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether the metaboxes are being saved.</li>\n</ul>\n<p><!-- END TOKEN(Autogenerated selectors|../../../packages/edit-post/src/store/selectors.js) --></p>\n<h2>Actions</h2>\n<p><!-- START TOKEN(Autogenerated actions|../../../packages/edit-post/src/store/actions.js) --></p>\n<h3>closeGeneralSidebar</h3>\n<p>Returns an action object signalling that the user closed the sidebar.</p>\n<h3>closeModal</h3>\n<blockquote><p>\n  <strong>Deprecated</strong> since WP 6.3 use <code>core/interface</code> store&#8217;s action with the same name instead.\n</p></blockquote>\n<p>Returns an action object signalling that the user closed a modal.</p>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Object</code>: Action object.</li>\n</ul>\n<h3>closePublishSidebar</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns an action object used in signalling that the user closed the publish sidebar.</p>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Object</code>: Action object.</li>\n</ul>\n<h3>hideBlockTypes</h3>\n<p>Update the provided block types to be hidden.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>blockNames</em> <code>string[]</code>: Names of block types to hide.</li>\n</ul>\n<h3>initializeMetaBoxes</h3>\n<p>Initializes WordPress <code>postboxes</code> script and the logic for saving meta boxes.</p>\n<h3>metaBoxUpdatesFailure</h3>\n<p>Returns an action object used to signal a failed meta box update.</p>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Object</code>: Action object.</li>\n</ul>\n<h3>metaBoxUpdatesSuccess</h3>\n<p>Returns an action object used to signal a successful meta box update.</p>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Object</code>: Action object.</li>\n</ul>\n<h3>openGeneralSidebar</h3>\n<p>Returns an action object used in signalling that the user opened an editor sidebar.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>name</em> <code>?string</code>: Sidebar name to be opened.</li>\n</ul>\n<h3>openModal</h3>\n<blockquote><p>\n  <strong>Deprecated</strong> since WP 6.3 use <code>core/interface</code> store&#8217;s action with the same name instead.\n</p></blockquote>\n<p>Returns an action object used in signalling that the user opened a modal.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>name</em> <code>string</code>: A string that uniquely identifies the modal.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Object</code>: Action object.</li>\n</ul>\n<h3>openPublishSidebar</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns an action object used in signalling that the user opened the publish sidebar.</p>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Object</code>: Action object</li>\n</ul>\n<h3>removeEditorPanel</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns an action object used to remove a panel from the editor.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>panelName</em> <code>string</code>: A string that identifies the panel to remove.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Object</code>: Action object.</li>\n</ul>\n<h3>requestMetaBoxUpdates</h3>\n<p>Update a metabox.</p>\n<h3>setAvailableMetaBoxesPerLocation</h3>\n<p>Stores info about which Meta boxes are available in which location.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>metaBoxesPerLocation</em> <code>Object</code>: Meta boxes per location.</li>\n</ul>\n<h3>setIsEditingTemplate</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns an action object used to switch to template editing.</p>\n<h3>setIsInserterOpened</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns an action object used to open/close the inserter.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>value</em> <code>boolean|Object</code>: Whether the inserter should be opened (true) or closed (false).</li>\n</ul>\n<h3>setIsListViewOpened</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns an action object used to open/close the list view.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>isOpen</em> <code>boolean</code>: A boolean representing whether the list view should be opened or closed.</li>\n</ul>\n<h3>showBlockTypes</h3>\n<p>Update the provided block types to be visible.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>blockNames</em> <code>string[]</code>: Names of block types to show.</li>\n</ul>\n<h3>switchEditorMode</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Triggers an action used to switch editor mode.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>mode</em> <code>string</code>: The editor mode.</li>\n</ul>\n<h3>toggleDistractionFree</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Action that toggles Distraction free mode. Distraction free mode expects there are no sidebars, as due to the z-index values set, you can&#8217;t close sidebars.</p>\n<h3>toggleEditorPanelEnabled</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns an action object used to enable or disable a panel in the editor.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>panelName</em> <code>string</code>: A string that identifies the panel to enable or disable.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Object</code>: Action object.</li>\n</ul>\n<h3>toggleEditorPanelOpened</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Opens a closed panel and closes an open panel.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>panelName</em> <code>string</code>: A string that identifies the panel to open or close.</li>\n</ul>\n<h3>toggleFeature</h3>\n<p>Triggers an action used to toggle a feature flag.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>feature</em> <code>string</code>: Feature name.</li>\n</ul>\n<h3>toggleFullscreenMode</h3>\n<p>Action that toggles the Fullscreen Mode view option.</p>\n<h3>togglePinnedPluginItem</h3>\n<p>Triggers an action object used to toggle a plugin name flag.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>pluginName</em> <code>string</code>: Plugin name.</li>\n</ul>\n<h3>togglePublishSidebar</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns an action object used in signalling that the user toggles the publish sidebar.</p>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Object</code>: Action object</li>\n</ul>\n<h3>updatePreferredStyleVariations</h3>\n<blockquote><p>\n  <strong>Deprecated</strong>\n</p></blockquote>\n<p>Returns an action object used in signaling that a style should be auto-applied when a block is created.</p>\n<p><!-- END TOKEN(Autogenerated actions|../../../packages/edit-post/src/store/actions.js) --></p>\n",
        "protected": false
    },
    "author": 0,
    "featured_media": 0,
    "parent": 134606,
    "menu_order": 344,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-134612",
        "blocks-handbook",
        "type-blocks-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134612",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/blocks-handbook"
            }
        ],
        "version-history": [
            {
                "count": 26,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134612/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 156130,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134612/revisions/156130"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134606"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=134612"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}