{
    "id": 156190,
    "date": "2025-01-07T18:34:06",
    "date_gmt": "2025-01-07T18:34:06",
    "guid": {
        "rendered": "https://developer.wordpress.org/block-editor/reference-guides/packages/packages-upload-media/"
    },
    "modified": "2025-01-07T18:49:06",
    "modified_gmt": "2025-01-07T18:49:06",
    "slug": "packages-upload-media",
    "status": "publish",
    "type": "blocks-handbook",
    "link": "https://developer.wordpress.org/block-editor/reference-guides/packages/packages-upload-media/",
    "title": {
        "rendered": "@wordpress/upload-media"
    },
    "content": {
        "rendered": "<p>This module is a media upload handler with a queue-like system that is implemented using a custom <code>@wordpress/data</code> store.</p>\n<p>Such a system is useful for additional client-side processing of media files (e.g. image compression) before uploading them to a server.</p>\n<p>It is typically used by <code>@wordpress/block-editor</code> but can also be leveraged outside of it.</p>\n<h2>Installation</h2>\n<p>Install the module</p>\n<pre><code class=\"language-bash\">npm install @wordpress/upload-media --save\n</code></pre>\n<h2>Usage</h2>\n<p>This is a basic example of how one can interact with the upload data store:</p>\n<pre><code class=\"language-js\">import { store as uploadStore } from '@wordpress/upload-media';\nimport { dispatch } from '@wordpress/data';\n\ndispatch( uploadStore ).updateSettings( /* ... */ );\ndispatch( uploadStore ).addItems( [\n    /* ... */\n] );\n</code></pre>\n<p>Refer to the API reference below or the TypeScript types for further help.</p>\n<h2>API Reference</h2>\n<h3>Actions</h3>\n<p>The following set of dispatching action creators are available on the object returned by <code>wp.data.dispatch( 'core/upload-media' )</code>:</p>\n<p><!-- START TOKEN(Autogenerated actions|src/store/actions.ts) --></p>\n<h4>addItems</h4>\n<p>Adds a new item to the upload queue.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>$0</em> <code>AddItemsArgs</code>:</li>\n<li><em>$0.files</em> <code>AddItemsArgs[ 'files' ]</code>: Files</li>\n<li><em>$0.onChange</em> <code>[AddItemsArgs[ 'onChange' ]]</code>: Function called each time a file or a temporary representation of the file is available.</li>\n<li><em>$0.onSuccess</em> <code>[AddItemsArgs[ 'onSuccess' ]]</code>: Function called after the file is uploaded.</li>\n<li><em>$0.onBatchSuccess</em> <code>[AddItemsArgs[ 'onBatchSuccess' ]]</code>: Function called after a batch of files is uploaded.</li>\n<li><em>$0.onError</em> <code>[AddItemsArgs[ 'onError' ]]</code>: Function called when an error happens.</li>\n<li><em>$0.additionalData</em> <code>[AddItemsArgs[ 'additionalData' ]]</code>: Additional data to include in the request.</li>\n<li><em>$0.allowedTypes</em> <code>[AddItemsArgs[ 'allowedTypes' ]]</code>: Array with the types of media that can be uploaded, if unset all types are allowed.</li>\n</ul>\n<h4>cancelItem</h4>\n<p>Cancels an item in the queue based on an error.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>id</em> <code>QueueItemId</code>: Item ID.</li>\n<li><em>error</em> <code>Error</code>: Error instance.</li>\n<li><em>silent</em> Whether to cancel the item silently, without invoking its <code>onError</code> callback.</li>\n</ul>\n<p><!-- END TOKEN(Autogenerated actions|src/store/actions.ts) --></p>\n<h3>Selectors</h3>\n<p>The following selectors are available on the object returned by <code>wp.data.select( 'core/upload-media' )</code>:</p>\n<p><!-- START TOKEN(Autogenerated selectors|src/store/selectors.ts) --></p>\n<h4>getItems</h4>\n<p>Returns all items currently being uploaded.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>State</code>: Upload state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>QueueItem[]</code>: Queue items.</li>\n</ul>\n<h4>getSettings</h4>\n<p>Returns the media upload settings.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>State</code>: Upload state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Settings</code>: Settings</li>\n</ul>\n<h4>isUploading</h4>\n<p>Determines whether any upload is currently in progress.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>State</code>: Upload state.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether any upload is currently in progress.</li>\n</ul>\n<h4>isUploadingById</h4>\n<p>Determines whether an upload is currently in progress given an attachment ID.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>State</code>: Upload state.</li>\n<li><em>attachmentId</em> <code>number</code>: Attachment ID.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether upload is currently in progress for the given attachment.</li>\n</ul>\n<h4>isUploadingByUrl</h4>\n<p>Determines whether an upload is currently in progress given an attachment URL.</p>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>state</em> <code>State</code>: Upload state.</li>\n<li><em>url</em> <code>string</code>: Attachment URL.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>boolean</code>: Whether upload is currently in progress for the given attachment.</li>\n</ul>\n<p><!-- END TOKEN(Autogenerated selectors|src/store/selectors.ts) --></p>\n",
        "protected": false
    },
    "author": 0,
    "featured_media": 0,
    "parent": 134521,
    "menu_order": 328,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-156190",
        "blocks-handbook",
        "type-blocks-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/156190",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/blocks-handbook"
            }
        ],
        "version-history": [
            {
                "count": 1,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/156190/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 156191,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/156190/revisions/156191"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134521"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=156190"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}