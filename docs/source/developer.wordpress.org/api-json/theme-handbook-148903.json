{
    "id": 148903,
    "date": "2023-10-17T14:31:13",
    "date_gmt": "2023-10-17T14:31:13",
    "guid": {
        "rendered": "https://developer.wordpress.org/?post_type=theme-handbook&#038;p=148903"
    },
    "modified": "2023-12-14T21:07:29",
    "modified_gmt": "2023-12-14T21:07:29",
    "slug": "introduction-to-theme-json",
    "status": "publish",
    "type": "theme-handbook",
    "link": "https://developer.wordpress.org/themes/global-settings-and-styles/introduction-to-theme-json/",
    "title": {
        "rendered": "Introduction to theme.json"
    },
    "content": {
        "rendered": "\n<p><code>theme.json</code> is a configuration file that lets you define the global settings, styles, and more for your theme. The file works with both block and classic themes.&nbsp;</p>\n\n\n\n<p>When building a block theme, <code>theme.json</code>&nbsp;may be the most important file in the entire theme. In a way, it is the foundational piece that trickles down to every other component. That\u2019s why this chapter is one of the most extensive in the handbook.</p>\n\n\n\n<p>Some of the things you can do with <code>theme.json</code> include (but are not limited to):</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li>Enabling block features in the user interface, such as color, typography, and spacing controls.</li>\n\n\n\n<li>Configuring a custom color palette, duotone filters, and background gradients.</li>\n\n\n\n<li>Defining typographical features like font families, bundling web fonts, and more.</li>\n\n\n\n<li>Adding your own CSS custom properties.</li>\n\n\n\n<li>Adjusting the overall design by working within the core styles system.</li>\n</ul>\n\n\n\n<p>The settings and styles that you configure in <code>theme.json</code> are ultimately reflected on both the front end of the site and WordPress\u2019 built-in editors. As shown in this screenshot, you can see that a variation of the default Twenty Twenty-Three theme as it\u2019s looks in the <strong>Appearance &gt; Editor</strong> screen in the admin:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><a href=\"https://i0.wp.com/developer.wordpress.org/files/2023/09/intro-styles-interface.jpg?ssl=1\"><img data-recalc-dims=\"1\" loading=\"lazy\" decoding=\"async\" width=\"2048\" height=\"1071\" src=\"https://i0.wp.com/developer.wordpress.org/files/2023/09/intro-styles-interface.jpg?resize=2048%2C1071&#038;ssl=1\" alt=\"WordPress Site Editor with the Styles panel open in the right sidebar.\" class=\"wp-image-148905\" srcset=\"https://i0.wp.com/developer.wordpress.org/files/2023/09/intro-styles-interface.jpg?w=2048&amp;ssl=1 2048w, https://i0.wp.com/developer.wordpress.org/files/2023/09/intro-styles-interface.jpg?resize=300%2C157&amp;ssl=1 300w, https://i0.wp.com/developer.wordpress.org/files/2023/09/intro-styles-interface.jpg?resize=1024%2C536&amp;ssl=1 1024w, https://i0.wp.com/developer.wordpress.org/files/2023/09/intro-styles-interface.jpg?resize=768%2C402&amp;ssl=1 768w, https://i0.wp.com/developer.wordpress.org/files/2023/09/intro-styles-interface.jpg?resize=1536%2C803&amp;ssl=1 1536w\" sizes=\"auto, (max-width: 1000px) 100vw, 1000px\" /></a></figure>\n\n\n\n<p>Each part of that design is handled directly in <code>theme.json</code>, and the user can further customize it through the built-in <strong>Styles</strong> interface.</p>\n\n\n\n<p><code>theme.json</code> represents what you might call a \u201ccommon language\u201d that allows WordPress, your theme, plugins, and users to effectively communicate. Because it is built atop a standardized system, each component plays a role in bringing the overall site to life.</p>\n\n\n\n<h2 class=\"wp-block-heading\">theme.json structure</h2>\n\n\n\n<p>The <code>theme.json</code> file can be broken down into several top-level sections as shown in this code snippet:</p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"json\" class=\"language-json\">{\n\t\"$schema\": \"https://schemas.wp.org/trunk/theme.json\",\n\t\"version\": 2,\n\t\"settings\": {},\n\t\"styles\": {},\n\t\"customTemplates\": {},\n\t\"templateParts\": {},\n\t\"patterns\": []\n}</code></pre>\n\n\n\n<p>Throughout this chapter, you will learn about each of these properties and how you can work with them to turn the design in your imagination into a working theme.</p>\n\n\n\n<p>Customizing the <code>theme.json</code> file directly in your theme requires that you have some familiarity with JSON code. You don\u2019t need to be an expert (<em>copying and pasting can get you pretty far</em>), but having some foundational knowledge of how to format JSON will definitely help.</p>\n\n\n\n<p>You should also have a baseline understanding of CSS. While you do not need to directly write CSS code in <code>theme.json</code>, many of the features are mapped to CSS properties and values. Understanding the relationship between <code>theme.json</code> settings and styles and their CSS counterparts will help you in the long run.</p>\n\n\n\n<p>For more information on JSON and CSS, read:</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS\">MDN Web Docs: CSS</a></li>\n\n\n\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON\">MDN Web Docs: JSON</a></li>\n</ul>\n\n\n\n<h2 class=\"wp-block-heading\">theme.json properties</h2>\n\n\n\n<p>As you could see in the previous section, the <code>theme.json</code> file has several top-level properties. Some of these accept just a single value, but most have nested sub-properties with their own values.</p>\n\n\n\n<p>These are the current top-level properties that you can set in <code>theme.json</code>:</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li><strong><code>version</code>:</strong> The <code>theme.json</code> schema version you are building for.&nbsp;</li>\n\n\n\n<li><strong><code>$schema</code>:</strong> Used for defining the supported JSON schema, which will integrate with many code editors to give you on-the-fly hints and error reporting.</li>\n\n\n\n<li><strong><code>settings</code>:</strong> Used to define which block controls appear, configure presets, and more.</li>\n\n\n\n<li><strong><code>styles</code>:</strong> Used to apply colors, font sizes, custom CSS, and other styles&nbsp; to the website and blocks.</li>\n\n\n\n<li><strong><code>customTemplates</code>:</strong> Metadata for custom templates defined in your theme\u2019s <code>/templates</code> folder.</li>\n\n\n\n<li><strong><code>templateParts</code>:</strong> Metadata for template parts defined in your theme\u2019s <code>/parts</code> folder.</li>\n\n\n\n<li><strong><code>patterns</code>:</strong> An array of pattern slugs to be registered from the <a href=\"https://wordpress.org/patterns/\">Pattern Directory</a>.</li>\n</ul>\n\n\n\n<h3 class=\"wp-block-heading\">Adding a version</h3>\n\n\n\n<p>At the very least, you should set the <code>version</code> property in your <code>theme.json</code> file. This should be an integer that matches the API version used to read and understand your <code>theme.json</code> code.</p>\n\n\n\n<p>The API is currently at version <code>2</code>. You can always find the most up-to-date version via the <a href=\"https://developer.wordpress.org/block-editor/reference-guides/theme-json-reference/theme-json-living/\"><code>theme.json</code> Living Reference</a> document.</p>\n\n\n\n<p>The bear minimum code that your <code>theme.json</code> file should have is:</p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"json\" class=\"language-json\">{\n\t\"version\": 2\n}</code></pre>\n\n\n\n<p>All <code>theme.json</code> code examples in this handbook include the <code>version</code> property because it should always be set.</p>\n\n\n\n<p>Technically, you can leave the version out, but WordPress will read your code as if it was on version <code>1</code> of the API. Using an outdated version may mean that your code will not be valid, at least as it is documented here in the handbook.</p>\n\n\n\n<p>&nbsp;You should always strive to keep up to date with the latest API version and make sure it is set in your <code>theme.json</code> file.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Adding a JSON schema</h3>\n\n\n\n<p>An optional property that you can add to your <code>theme.json</code> is a URL to the JSON schema. This can be particularly helpful when working with any modern code editor. Adding the <code>$schema</code> property will give you on-the-fly hints and error reporting in many code editors and is highly recommended.</p>\n\n\n\n<p>To add support for JSON schema, add this to your <code>theme.json</code> file:</p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"json\" class=\"language-json\">{\n\t\"$schema\": \"https://schemas.wp.org/trunk/theme.json\",\n\t\"version\": 2\n}</code></pre>\n\n\n\n<p>Again, this is <em>technically</em> an optional property. But there is rarely a good reason to leave it out. It\u2019s just good development practice to include it.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Adding settings, styles, and more</h3>\n\n\n\n<p>The other properties available to you via <code>theme.json</code> require more in-depth documentation than what can be covered in this introduction. They each have their own pages (and some with multiple sub-pages) in this chapter of the handbook.</p>\n\n\n\n<p>Now it\u2019s time to really dive into learning more about <code>theme.json</code>. You can take these next documentation steps as you prefer, but these are listed in their recommended reading order:</p>\n\n\n\n<ul class=\"wp-block-list\">\n<li><a href=\"https://developer.wordpress.org/themes/global-settings-and-styles/settings/\"><strong>Settings</strong></a><strong>:</strong> Documentation for each of the standard and custom settings that you can configure via <code>theme.json</code>.</li>\n\n\n\n<li><a href=\"https://developer.wordpress.org/themes/global-settings-and-styles/styles/\"><strong>Styles</strong></a><strong>:</strong> Learn how to use the standard design system to apply styles through <code>theme.json</code>, which also integrate with the user interface.</li>\n\n\n\n<li><a href=\"https://developer.wordpress.org/themes/global-settings-and-styles/custom-templates/\"><strong>Custom Templates</strong></a><strong>:</strong> How to register custom post, page, and CPT (custom post type) templates for your theme.</li>\n\n\n\n<li><a href=\"https://developer.wordpress.org/themes/global-settings-and-styles/template-parts/\"><strong>Template Parts</strong></a><strong>:</strong> How to register custom template parts that can be reused across your theme.</li>\n\n\n\n<li><a href=\"https://developer.wordpress.org/themes/global-settings-and-styles/patterns/\"><strong>Patterns</strong></a><strong>:&nbsp;</strong>How to bundle patterns from the official patterns repository with your theme.</li>\n\n\n\n<li><a href=\"https://developer.wordpress.org/themes/global-settings-and-styles/style-variations/\"><strong>Style Variations</strong></a><strong>:</strong> Documentation on creating custom <code>theme.json</code> style variations, giving your users alternative designs to choose from.</li>\n</ul>\n",
        "protected": false
    },
    "author": 20482,
    "featured_media": 0,
    "parent": 148901,
    "menu_order": 10,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-148903",
        "theme-handbook",
        "type-theme-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/theme-handbook/148903",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/theme-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/theme-handbook"
            }
        ],
        "author": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/users/20482"
            }
        ],
        "version-history": [
            {
                "count": 5,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/theme-handbook/148903/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 149256,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/theme-handbook/148903/revisions/149256"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/theme-handbook/148901"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=148903"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}