{
    "id": 134542,
    "date": "2021-03-09T08:38:22",
    "date_gmt": "2021-03-09T08:38:22",
    "guid": {
        "rendered": "https://developer.wordpress.org/block-editor/reference-guides/packages/packages-create-block/"
    },
    "modified": "2025-07-08T10:16:01",
    "modified_gmt": "2025-07-08T10:16:01",
    "slug": "packages-create-block",
    "status": "publish",
    "type": "blocks-handbook",
    "link": "https://developer.wordpress.org/block-editor/reference-guides/packages/packages-create-block/",
    "title": {
        "rendered": "@wordpress/create-block"
    },
    "content": {
        "rendered": "<p>Create Block is an <strong>officially supported tool for scaffolding a WordPress plugin that registers a block</strong>. It generates PHP, JS, CSS code, and everything you need to start the project. It also integrates a modern build setup with no configuration.</p>\n<p><em>It is largely inspired by <a href=\"https://create-react-app.dev/docs/getting-started\">create-react-app</a>. Major kudos to <a href=\"https://github.com/gaearon\">@gaearon</a>, the whole Facebook team, and the React community.</em></p>\n<blockquote><p>\n  <strong>Blocks are the fundamental elements of modern WordPress sites</strong>. Introduced in <a href=\"https://wordpress.org/news/2018/12/bebo/\">WordPress 5.0</a>, they allow <a href=\"https://wordpress.org/gutenberg/\">page and post builder-like functionality</a> to every up-to-date WordPress website.</p>\n<p>  <em>Learn more about the <a href=\"https://developer.wordpress.org/block-editor/developers/block-api/block-registration/\">Block API at the Gutenberg HandBook</a>.</em>\n</p></blockquote>\n<h2>Quick start</h2>\n<pre><code class=\"language-bash\">$ npx @wordpress/create-block@latest todo-list\n$ cd todo-list\n$ npm start\n</code></pre>\n<p>The <code>slug</code> provided (<code>todo-list</code> in the example) defines the folder name for the scaffolded plugin and the internal block name. The WordPress plugin generated must <a href=\"https://wordpress.org/documentation/article/manage-plugins/#manual-plugin-installation-1\">be installed manually</a>.</p>\n<p><em>(requires <code>node</code> version <code>20.10.0</code> or above, and <code>npm</code> version <code>10.2.3</code> or above)</em></p>\n<blockquote><p>\n  <a href=\"https://learn.wordpress.org/tutorial/using-the-create-block-tool/\">Watch a video introduction to create-block on Learn.wordpress.org</a>\n</p></blockquote>\n<h2>Usage</h2>\n<p>The <code>create-block</code> command generates a project with PHP, JS, and CSS code for registering a block with a WordPress plugin.</p>\n<pre><code class=\"language-bash\">$ npx @wordpress/create-block@latest [options] [slug]\n</code></pre>\n<p><img data-recalc-dims=\"1\" decoding=\"async\" src=\"https://i0.wp.com/user-images.githubusercontent.com/699132/103872910-4de15f00-50cf-11eb-8c74-67ca91a8c1a4.gif?ssl=1\" alt=\"Demo\" /></p>\n<blockquote><p>\n  The name for a block is a unique string that identifies a block. Block Names are structured as <code>namespace</code>/<code>slug</code>, where namespace is the name of your plugin or theme.</p>\n<p>  In most cases, we recommended pairing blocks with WordPress plugins rather than themes, because only using plugin ensures that all blocks still work when your theme changes.\n</p></blockquote>\n<h3>Interactive Mode</h3>\n<p>When no <code>slug</code> is provided, the script will run in interactive mode and will start prompting for the input required (<code>slug</code>, title, namespace&#8230;) to scaffold the project.</p>\n<h3><code>namespace</code></h3>\n<p>By default, blocks are created with the <code>create-block</code> namespace. You should specify your own unique namespace:</p>\n<pre><code class=\"language-bash\">$ npx @wordpress/create-block@latest my-block --namespace=my-namespace\n</code></pre>\n<p>This creates <code>my-namespace/my-block</code> instead of <code>create-block/my-block</code>.</p>\n<p>If you&#8217;ve already created a block, update the namespace in:<br />\n&#8211; <code>block.json</code> &#8211; the <code>name</code> property</p>\n<h3><code>slug</code></h3>\n<p>The use of <code>slug</code> is optional.</p>\n<p>When provided it triggers the <em>quick mode</em>, where this <code>slug</code> is used:</p>\n<ul>\n<li>as the block slug (required for its identification)</li>\n<li>as the output location (folder name) for scaffolded files</li>\n<li>as the name of the WordPress plugin.</li>\n</ul>\n<p>The rest of the configuration is set to all default values unless overridden with some options listed below.</p>\n<h3><code>options</code></h3>\n<pre><code class=\"language-bash\">-V, --version                output the version number\n-t, --template &lt;name&gt;        project template type name; allowed values: \"static\" (default), \"es5\", the name of an external npm package, or the path to a local directory\n--variant                    choose a block variant as defined by the template\n--no-plugin                  scaffold block files only\n--target-dir &lt;directory&gt;     the directory where the files will be scaffolded, defaults to the slug\n--namespace &lt;value&gt;          internal namespace for the block name\n--title &lt;value&gt;              display title for the block and the WordPress plugin\n--short-description &lt;value&gt;  short description for the block and the WordPress plugin\n--category &lt;name&gt;            category name for the block\n--wp-scripts                 enable integration with `@wordpress/scripts` package\n--no-wp-scripts              disable integration with `@wordpress/scripts` package\n--wp-env                     enable integration with `@wordpress/env` package\n--textdomain &lt;value&gt;         text domain for internationalization\n-h, --help                   output usage information\n</code></pre>\n<h4><code>--template</code></h4>\n<p>This argument specifies an <em>external npm package</em> as a template.</p>\n<pre><code class=\"language-bash\">$ npx @wordpress/create-block@latest --template my-template-package\n</code></pre>\n<p>This argument also allows to pick a <em>local directory</em> as a template.</p>\n<pre><code class=\"language-bash\">$ npx @wordpress/create-block@latest --template ./path/to/template-directory\n</code></pre>\n<h4><code>--variant</code></h4>\n<p>With this argument, <code>create-block</code> will generate a <a href=\"https://developer.wordpress.org/block-editor/getting-started/glossary/#dynamic-block\">dynamic block</a> based on the built-in template.</p>\n<pre><code class=\"language-bash\">$ npx @wordpress/create-block@latest --variant dynamic\n</code></pre>\n<h4><code>--no-plugin</code></h4>\n<p>With this argument, the <code>create-block</code> package runs in <em>No plugin mode</em> which only scaffolds block files into the current directory.</p>\n<pre><code class=\"language-bash\">$ npx @wordpress/create-block@latest --no-plugin\n</code></pre>\n<h4><code>--wp-env</code></h4>\n<p>With this argument, the <code>create-block</code> package will add to the generated plugin the configuration and the script to run <a href=\"https://developer.wordpress.org/block-editor/reference-guides/packages/packages-env/\"><code>wp-env</code> package</a> within the plugin. This will allow you to easily set up a local WordPress environment (via Docker) for building and testing the generated plugin.</p>\n<pre><code class=\"language-bash\">$ npx @wordpress/create-block@latest --wp-env\n</code></pre>\n<h4><code>--textdomain</code></h4>\n<p>With this argument, the <code>create-block</code> package will a generate a block with the provided text domain. If not specified, the block\u2019s slug is used as the default text domain.</p>\n<pre><code class=\"language-bash\">$ npx @wordpress/create-block@latest --textdomain my-custom-domain\n</code></pre>\n<h4><code>--help</code></h4>\n<p>With this argument, the <code>create-block</code> package outputs usage information.</p>\n<pre><code class=\"language-bash\">$ npx @wordpress/create-block@latest --help\n</code></pre>\n<h2>Available commands in the scaffolded project</h2>\n<p>The plugin folder created when executing this command, is a node package with a modern build setup that requires no configuration.</p>\n<p>A set of scripts is available from inside that folder (provided by the <code>scripts</code> package) to make your work easier. <a href=\"https://github.com/WordPress/gutenberg/tree/HEAD/packages/scripts#available-scripts\">Click here</a> for a full description of these commands.</p>\n<p><em>Note: You don\u2019t need to install or configure tools like <a href=\"https://webpack.js.org\">webpack</a>, <a href=\"https://babeljs.io\">Babel</a> or <a href=\"https://eslint.org\">ESLint</a> yourself. They are preconfigured and hidden so that you can focus on coding.</em></p>\n<p>For example, running the <code>start</code> script from inside the generated folder (<code>npm start</code>) would automatically start the build for development.</p>\n<h2>External Project Templates</h2>\n<p><a href=\"https://developer.wordpress.org/block-editor/reference-guides/packages/packages-create-block/packages-create-block-external-template/\">Click here</a> for information on External Project Templates</p>\n<h2>Contributing to this package</h2>\n<p>This is an individual package that&#8217;s part of the Gutenberg project. The project is organized as a monorepo. It&#8217;s made up of multiple self-contained software packages, each with a specific purpose. The packages in this monorepo are published to <a href=\"https://www.npmjs.com/\">npm</a> and used by <a href=\"https://make.wordpress.org/core/\">WordPress</a> as well as other software projects.</p>\n<p>To find out more about contributing to this package or Gutenberg as a whole, please read the project&#8217;s main <a href=\"https://github.com/WordPress/gutenberg/tree/HEAD/CONTRIBUTING.md\">contributor guide</a>.</p>\n",
        "protected": false
    },
    "author": 0,
    "featured_media": 0,
    "parent": 134521,
    "menu_order": 260,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-134542",
        "blocks-handbook",
        "type-blocks-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134542",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/blocks-handbook"
            }
        ],
        "version-history": [
            {
                "count": 37,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134542/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 158978,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134542/revisions/158978"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134521"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=134542"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}