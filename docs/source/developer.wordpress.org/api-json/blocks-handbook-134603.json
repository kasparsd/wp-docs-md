{
    "id": 134603,
    "date": "2021-03-09T08:38:24",
    "date_gmt": "2021-03-09T08:38:24",
    "guid": {
        "rendered": "https://developer.wordpress.org/block-editor/reference-guides/packages/packages-viewport/"
    },
    "modified": "2025-01-07T18:34:12",
    "modified_gmt": "2025-01-07T18:34:12",
    "slug": "packages-viewport",
    "status": "publish",
    "type": "blocks-handbook",
    "link": "https://developer.wordpress.org/block-editor/reference-guides/packages/packages-viewport/",
    "title": {
        "rendered": "@wordpress/viewport"
    },
    "content": {
        "rendered": "<p>Viewport is a module for responding to changes in the browser viewport size. It registers its own <a href=\"https://github.com/WordPress/gutenberg/tree/HEAD/packages/data/README.md\">data module</a>, updated in response to browser media queries on a standard set of supported breakpoints. This data and the included higher-order components can be used in your own modules and components to implement viewport-dependent behaviors.</p>\n<h2>Installation</h2>\n<p>Install the module</p>\n<pre><code class=\"language-bash\">npm install @wordpress/viewport --save\n</code></pre>\n<p><em>This package assumes that your code will run in an <strong>ES2015+</strong> environment. If you&#8217;re using an environment that has limited or no support for such language features and APIs, you should include <a href=\"https://github.com/WordPress/gutenberg/tree/HEAD/packages/babel-preset-default#polyfill\">the polyfill shipped in <code>@wordpress/babel-preset-default</code></a> in your code.</em></p>\n<h2>Usage</h2>\n<p>The standard set of breakpoint thresholds is as follows:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Pixel Width</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>huge</code></td>\n<td>1440</td>\n</tr>\n<tr>\n<td><code>wide</code></td>\n<td>1280</td>\n</tr>\n<tr>\n<td><code>large</code></td>\n<td>960</td>\n</tr>\n<tr>\n<td><code>medium</code></td>\n<td>782</td>\n</tr>\n<tr>\n<td><code>small</code></td>\n<td>600</td>\n</tr>\n<tr>\n<td><code>mobile</code></td>\n<td>480</td>\n</tr>\n</tbody>\n</table>\n<h3>Data Module</h3>\n<p>The Viewport module registers itself under the <code>core/viewport</code> data namespace and is exposed from the package as <code>store</code>.</p>\n<pre><code class=\"language-js\">import { select } from '@wordpress/data';\nimport { store } from '@wordpress/viewport';\n\nconst isSmall = select( store ).isViewportMatch( '&lt; medium' );\n</code></pre>\n<p>The <code>isViewportMatch</code> selector accepts a single string argument <code>query</code>. It consists of an optional operator and breakpoint name, separated with a space. The operator can be <code>&lt;</code> or <code>&gt;=</code>, defaulting to <code>&gt;=</code>.</p>\n<pre><code class=\"language-js\">import { select } from '@wordpress/data';\nimport { store } from '@wordpress/viewport';\n\nconst { isViewportMatch } = select( store );\nconst isSmall = isViewportMatch( '&lt; medium' );\nconst isWideOrHuge = isViewportMatch( '&gt;= wide' );\n// Equivalent:\n//  const isWideOrHuge = isViewportMatch( 'wide' );\n</code></pre>\n<h3>Higher-Order Components</h3>\n<p>This package provides a set of HOCs to author components whose behavior should vary depending on the viewport.</p>\n<p><!-- START TOKEN(Autogenerated API docs) --></p>\n<h4>ifViewportMatches</h4>\n<p>Higher-order component creator, creating a new component which renders if the viewport query is satisfied.</p>\n<p><em>Related</em></p>\n<ul>\n<li>withViewportMatches</li>\n</ul>\n<p><em>Usage</em></p>\n<pre><code class=\"language-jsx\">function MyMobileComponent() {\n    return &lt;div&gt;I'm only rendered on mobile viewports!&lt;/div&gt;;\n}\n\nMyMobileComponent = ifViewportMatches( '&lt; small' )( MyMobileComponent );\n</code></pre>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>query</em> <code>string</code>: Viewport query.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Function</code>: Higher-order component.</li>\n</ul>\n<h4>store</h4>\n<p>Store definition for the viewport namespace.</p>\n<p><em>Related</em></p>\n<ul>\n<li><a href=\"https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\">https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore</a></li>\n</ul>\n<p><em>Type</em></p>\n<ul>\n<li><code>Object</code></li>\n</ul>\n<h4>withViewportMatch</h4>\n<p>Higher-order component creator, creating a new component which renders with the given prop names, where the value passed to the underlying component is the result of the query assigned as the object&#8217;s value.</p>\n<p><em>Related</em></p>\n<ul>\n<li>isViewportMatch</li>\n</ul>\n<p><em>Usage</em></p>\n<pre><code class=\"language-jsx\">function MyComponent( { isMobile } ) {\n    return &lt;div&gt;Currently: { isMobile ? 'Mobile' : 'Not Mobile' }&lt;/div&gt;;\n}\n\nMyComponent = withViewportMatch( { isMobile: '&lt; small' } )( MyComponent );\n</code></pre>\n<p><em>Parameters</em></p>\n<ul>\n<li><em>queries</em> <code>Object</code>: Object of prop name to viewport query.</li>\n</ul>\n<p><em>Returns</em></p>\n<ul>\n<li><code>Function</code>: Higher-order component.</li>\n</ul>\n<p><!-- END TOKEN(Autogenerated API docs) --></p>\n<h2>Contributing to this package</h2>\n<p>This is an individual package that&#8217;s part of the Gutenberg project. The project is organized as a monorepo. It&#8217;s made up of multiple self-contained software packages, each with a specific purpose. The packages in this monorepo are published to <a href=\"https://www.npmjs.com/\">npm</a> and used by <a href=\"https://make.wordpress.org/core/\">WordPress</a> as well as other software projects.</p>\n<p>To find out more about contributing to this package or Gutenberg as a whole, please read the project&#8217;s main <a href=\"https://github.com/WordPress/gutenberg/tree/HEAD/CONTRIBUTING.md\">contributor guide</a>.</p>\n",
        "protected": false
    },
    "author": 0,
    "featured_media": 0,
    "parent": 134521,
    "menu_order": 330,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-134603",
        "blocks-handbook",
        "type-blocks-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134603",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/blocks-handbook"
            }
        ],
        "version-history": [
            {
                "count": 13,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134603/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 151777,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134603/revisions/151777"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/blocks-handbook/134521"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=134603"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}