{
    "id": 157166,
    "date": "2025-02-21T04:17:10",
    "date_gmt": "2025-02-21T04:17:10",
    "guid": {
        "rendered": "https://developer.wordpress.org/secure-custom-fields/features/api/api-helpers-file/"
    },
    "modified": "2025-06-23T10:16:11",
    "modified_gmt": "2025-06-23T10:16:11",
    "slug": "api-helpers-file",
    "status": "publish",
    "type": "scf-handbook",
    "link": "https://developer.wordpress.org/secure-custom-fields/code-reference/api/api-helpers-file/",
    "title": {
        "rendered": "API Helpers Global Functions"
    },
    "content": {
        "rendered": "<h2><code>acf_is_array()</code></h2>\n<p>This function will return true for a non empty array</p>\n<ul>\n<li>@since   ACF 5.4.0</li>\n<li>@param   mixed $array The variable to test.</li>\n<li>@return boolean</li>\n</ul>\n<h2><code>acf_has_setting()</code></h2>\n<p>Alias of acf()-&gt;has_setting()</p>\n<ul>\n<li>@since   ACF 5.6.5</li>\n<li>@param   string $name Name of the setting to check for.</li>\n<li>@return boolean</li>\n</ul>\n<h2><code>acf_raw_setting()</code></h2>\n<p>acf_raw_setting</p>\n<ul>\n<li>alias of acf()-&gt;get_setting()</li>\n<li>@since   ACF 5.6.5</li>\n<li>@param   n/a</li>\n<li>@return n/a</li>\n</ul>\n<h2><code>acf_update_setting()</code></h2>\n<p>acf_update_setting</p>\n<ul>\n<li>alias of acf()-&gt;update_setting()</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $name (string)</li>\n<li>@param $value (mixed)</li>\n<li>@return n/a</li>\n</ul>\n<h2><code>acf_validate_setting()</code></h2>\n<p>acf_validate_setting</p>\n<ul>\n<li>Returns the changed setting name if available.</li>\n<li>@since   ACF 5.6.5</li>\n<li>@param   n/a</li>\n<li>@return n/a</li>\n</ul>\n<h2><code>acf_get_setting()</code></h2>\n<p>Alias of acf()-&gt;get_setting()</p>\n<ul>\n<li>@since   ACF 5.0.0</li>\n<li>@param   string $name  The name of the setting to test.</li>\n<li>@param string $value An optional default value for the setting if it doesn&#8217;t exist.</li>\n<li>@return n/a</li>\n</ul>\n<h2><code>acf_get_internal_post_types()</code></h2>\n<p>Return an array of ACF&#8217;s internal post type names</p>\n<ul>\n<li>@since ACF 6.1</li>\n<li>@return array An array of ACF&#8217;s internal post type names</li>\n</ul>\n<h2><code>acf_append_setting()</code></h2>\n<p>acf_append_setting</p>\n<ul>\n<li>This function will add a value into the settings array found in the acf object</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $name (string)</li>\n<li>@param $value (mixed)</li>\n<li>@return n/a</li>\n</ul>\n<h2><code>acf_get_data()</code></h2>\n<p>acf_get_data</p>\n<ul>\n<li>Returns data.</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   string $name</li>\n<li>@return mixed</li>\n</ul>\n<h2><code>acf_set_data()</code></h2>\n<p>acf_set_data</p>\n<ul>\n<li>Sets data.</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   string $name</li>\n<li>@param mixed  $value</li>\n<li>@return n/a</li>\n</ul>\n<h2><code>acf_append_data()</code></h2>\n<p>Appends data to an existing key.</p>\n<ul>\n<li>@since   ACF 5.9.0</li>\n<li>@param string $name The data name.</li>\n<li>@param mixed  $data The data to append to name.</li>\n</ul>\n<h2><code>acf_init()</code></h2>\n<p>Alias of acf()-&gt;<a href=\"https://developer.wordpress.org/reference/functions/init/\" rel=\"function\">init()</a>  &#8211; the core ACF init function.</p>\n<ul>\n<li>@since   ACF 5.0.0</li>\n</ul>\n<h2><code>acf_has_done()</code></h2>\n<p>acf_has_done</p>\n<ul>\n<li>This function will return true if this action has already been done</li>\n<li>@since   ACF 5.3.2</li>\n<li>@param   $name (string)</li>\n<li>@return (boolean)</li>\n</ul>\n<h2><code>acf_get_external_path()</code></h2>\n<p>This function will return the path to a file within an external folder</p>\n<ul>\n<li>@since   ACF 5.5.8</li>\n<li>@param   string $file Directory path.</li>\n<li>@param string $path Optional file path.</li>\n<li>@return string File path.</li>\n</ul>\n<h2><code>acf_get_external_dir()</code></h2>\n<p>This function will return the url to a file within an internal ACF folder</p>\n<ul>\n<li>@since   ACF 5.5.8</li>\n<li>@param   string $file Directory path.</li>\n<li>@param string $path Optional file path.</li>\n<li>@return string File path.</li>\n</ul>\n<h2><code>acf_plugin_dir_url()</code></h2>\n<p>This function will calculate the url to a plugin folder.<br />\nDifferent to the WP <a href=\"https://developer.wordpress.org/reference/functions/plugin_dir_url/\" rel=\"function\">plugin_dir_url()</a> , this function can calculate for urls outside of the plugins folder (theme include).</p>\n<ul>\n<li>@since   ACF 5.6.8</li>\n<li>@param   string $file A file path inside the ACF plugin to get the plugin directory path from.</li>\n<li>@return string The plugin directory path.</li>\n</ul>\n<h2><code>acf_parse_args()</code></h2>\n<p>This function will merge together 2 arrays and also convert any numeric values to ints</p>\n<ul>\n<li>@since   ACF 5.0.0</li>\n<li>@param   array $args     The configured arguments array.</li>\n<li>@param array $defaults The default properties for the passed args to inherit.</li>\n<li>@return array $args Parsed arguments with defaults applied.</li>\n</ul>\n<h2><code>acf_parse_types()</code></h2>\n<p>acf_parse_types</p>\n<ul>\n<li>This function will convert any numeric values to int and trim strings</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $var (mixed)</li>\n<li>@return $var (mixed)</li>\n</ul>\n<h2><code>acf_parse_type()</code></h2>\n<p>acf_parse_type</p>\n<ul>\n<li>description</li>\n<li>@since   ACF 5.0.9</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_get_view()</code></h2>\n<p>This function will load in a file from the &#8216;admin/views&#8217; folder and allow variables to be passed through</p>\n<ul>\n<li>@since   ACF 5.0.0</li>\n<li>@param string $view_path</li>\n<li>@param array  $view_args</li>\n</ul>\n<h2><code>acf_merge_atts()</code></h2>\n<p>acf_merge_atts</p>\n<ul>\n<li>description</li>\n<li>@since   ACF 5.0.9</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_nonce_input()</code></h2>\n<p>This function will create and echo a basic nonce input</p>\n<ul>\n<li>@since   ACF 5.6.0</li>\n<li>@param string $nonce The nonce parameter string.</li>\n</ul>\n<h2><code>acf_extract_var()</code></h2>\n<p>This function will remove the var from the array, and return the var</p>\n<ul>\n<li>@since   ACF 5.0.0</li>\n<li>@param array  $extract_array an array passed as reference to be extracted.</li>\n<li>@param string $key           The key to extract from the array.</li>\n<li>@param mixed  $default_value The default value if it doesn&#8217;t exist in the extract array.</li>\n<li>@return mixed Extracted var or default.</li>\n</ul>\n<h2><code>acf_extract_vars()</code></h2>\n<p>This function will remove the vars from the array, and return the vars</p>\n<ul>\n<li>@since   ACF 5.0.0</li>\n<li>@param array $extract_array an array passed as reference to be extracted.</li>\n<li>@param array $keys          An array of keys to extract from the original array.</li>\n<li>@return array An array of extracted values.</li>\n</ul>\n<h2><code>acf_get_sub_array()</code></h2>\n<p>acf_get_sub_array</p>\n<ul>\n<li>This function will return a sub array of data</li>\n<li>@since   ACF 5.3.2</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_get_post_types()</code></h2>\n<p>Returns an array of post type names.</p>\n<ul>\n<li>@since   ACF 5.0.0</li>\n<li>@param array $args Optional. An array of key =&gt; value arguments to match against the post type objects. Default empty array.</li>\n<li>@return array A list of post type names.</li>\n</ul>\n<h2><code>acf_get_post_stati()</code></h2>\n<p>Function acf_get_post_stati()</p>\n<ul>\n<li>Returns an array of post status names.</li>\n<li>@since   ACF 6.1.0</li>\n<li>@param   array $args Optional. An array of key =&gt; value arguments to match against the post status objects. Default empty array.</li>\n<li>@return array A list of post status names.</li>\n</ul>\n<h2><code>acf_get_pretty_post_statuses()</code></h2>\n<p>Function acf_get_pretty_post_statuses()</p>\n<ul>\n<li>Returns a clean array of post status names.</li>\n<li>@since   ACF 6.1.0</li>\n<li>@param   array $post_statuses Optional. An array of post status objects. Default empty array.</li>\n<li>@return array An array of post status names.</li>\n</ul>\n<h2><code>acf_get_post_type_label()</code></h2>\n<p>acf_get_post_type_label</p>\n<ul>\n<li>This function will return a pretty label for a specific post_type</li>\n<li>@since   ACF 5.4.0</li>\n<li>@param   $post_type (string)</li>\n<li>@return (string)</li>\n</ul>\n<h2><code>acf_get_post_status_label()</code></h2>\n<p>Function acf_get_post_status_label()</p>\n<ul>\n<li>This function will return a pretty label for a specific post_status</li>\n<li>@since   ACF 6.1.0</li>\n<li>@param   string $post_status The post status.</li>\n<li>@return string The post status label.</li>\n</ul>\n<h2><code>acf_verify_nonce()</code></h2>\n<p>acf_verify_nonce</p>\n<ul>\n<li>This function will look at the $_POST[&#8216;_acf_nonce&#8217;] value and return true or false</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $nonce (string)</li>\n<li>@return (boolean)</li>\n</ul>\n<h2><code>acf_verify_ajax()</code></h2>\n<p>Returns true if the current AJAX request is valid.<br />\nIt&#8217;s action will also allow WPML to set the lang and avoid AJAX get_posts issues</p>\n<ul>\n<li>@since   ACF 5.2.3</li>\n<li>@param string $nonce  The nonce to check.</li>\n<li>@param string $action The action of the nonce.</li>\n<li>@param bool   $action_is_field Whether the action is a field key or not. Defaults to false.</li>\n<li>@return boolean</li>\n</ul>\n<h2><code>acf_get_image_sizes()</code></h2>\n<p>acf_get_image_sizes</p>\n<ul>\n<li>This function will return an array of available image sizes</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   n/a</li>\n<li>@return (array)</li>\n</ul>\n<h2><code>acf_version_compare()</code></h2>\n<p>acf_version_compare</p>\n<ul>\n<li>Similar to the version_compare() function but with extra functionality.</li>\n<li>@since   ACF 5.5.0</li>\n<li>@param   string $left    The left version number.</li>\n<li>@param string $compare The compare operator.</li>\n<li>@param string $right   The right version number.</li>\n<li>@return boolean</li>\n</ul>\n<h2><code>acf_get_full_version()</code></h2>\n<p>acf_get_full_version</p>\n<ul>\n<li>This function will remove any &#8216;-beta1&#8217; or &#8216;-RC1&#8217; strings from a version</li>\n<li>@since   ACF 5.5.0</li>\n<li>@param   $version (string)</li>\n<li>@return (string)</li>\n</ul>\n<h2><code>acf_get_terms()</code></h2>\n<p>acf_get_terms</p>\n<ul>\n<li>This function is a wrapper for the <a href=\"https://developer.wordpress.org/reference/functions/get_terms/\" rel=\"function\">get_terms()</a>  function</li>\n<li>@since   ACF 5.4.0</li>\n<li>@param   $args (array)</li>\n<li>@return (array)</li>\n</ul>\n<h2><code>acf_get_taxonomy_terms()</code></h2>\n<p>acf_get_taxonomy_terms</p>\n<ul>\n<li>This function will return an array of available taxonomy terms</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $taxonomies (array)</li>\n<li>@return (array)</li>\n</ul>\n<h2><code>acf_decode_taxonomy_terms()</code></h2>\n<p>acf_decode_taxonomy_terms</p>\n<ul>\n<li>This function decodes the $taxonomy:$term strings into a nested array</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $terms (array)</li>\n<li>@return (array)</li>\n</ul>\n<h2><code>acf_decode_taxonomy_term()</code></h2>\n<p>acf_decode_taxonomy_term</p>\n<ul>\n<li>This function will return the taxonomy and term slug for a given value</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $string (string)</li>\n<li>@return (array)</li>\n</ul>\n<h2><code>acf_array()</code></h2>\n<p>acf_array</p>\n<ul>\n<li>Casts the value into an array.</li>\n<li>@since   ACF 5.7.10</li>\n<li>@param   mixed $val The value to cast.</li>\n<li>@return array</li>\n</ul>\n<h2><code>acf_unarray()</code></h2>\n<p>Returns a non-array value.</p>\n<ul>\n<li>@since   ACF 5.8.10</li>\n<li>@param   mixed $val The value to review.</li>\n<li>@return mixed</li>\n</ul>\n<h2><code>acf_get_array()</code></h2>\n<p>acf_get_array</p>\n<ul>\n<li>This function will force a variable to become an array</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $var (mixed)</li>\n<li>@return (array)</li>\n</ul>\n<h2><code>acf_get_numeric()</code></h2>\n<p>acf_get_numeric</p>\n<ul>\n<li>This function will return numeric values</li>\n<li>@since   ACF 5.4.0</li>\n<li>@param   $value (mixed)</li>\n<li>@return (mixed)</li>\n</ul>\n<h2><code>acf_get_posts()</code></h2>\n<p>acf_get_posts</p>\n<ul>\n<li>Similar to the <a href=\"https://developer.wordpress.org/reference/functions/get_posts/\" rel=\"function\">get_posts()</a>  function but with extra functionality.</li>\n<li>@since   ACF 5.1.5</li>\n<li>@param   array $args The query args.</li>\n<li>@return array</li>\n</ul>\n<h2><code>_acf_query_remove_post_type()</code></h2>\n<p>_acf_query_remove_post_type</p>\n<ul>\n<li>This function will remove the &#8216;wp_posts.post_type&#8217; WHERE clause completely<br />\nWhen using &#8216;post__in&#8217;, this clause is unnecessary and slow.</li>\n<li>@since   ACF 5.1.5</li>\n<li>@param   $sql (string)</li>\n<li>@return $sql</li>\n</ul>\n<h2><code>acf_get_grouped_posts()</code></h2>\n<p>acf_get_grouped_posts</p>\n<ul>\n<li>This function will return all posts grouped by post_type<br />\nThis is handy for select settings</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $args (array)</li>\n<li>@return (array)</li>\n</ul>\n<h2><code>_acf_orderby_post_type()</code></h2>\n<p>The internal ACF function to add order by post types for use in <code>acf_get_grouped_posts</code></p>\n<ul>\n<li>@param string $orderby  The current orderby value for a query.</li>\n<li>@param object $wp_query The <a href=\"https://developer.wordpress.org/reference/classes/wp_query/\" rel=\"class\">WP_Query</a>.</li>\n<li>@return string The potentially modified orderby string.</li>\n</ul>\n<h2><code>acf_get_pretty_user_roles()</code></h2>\n<p>acf_get_pretty_user_roles</p>\n<ul>\n<li>description</li>\n<li>@since   ACF 5.3.2</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_get_grouped_users()</code></h2>\n<p>acf_get_grouped_users</p>\n<ul>\n<li>This function will return all users grouped by role<br />\nThis is handy for select settings</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $args (array)</li>\n<li>@return (array)</li>\n</ul>\n<h2><code>acf_json_encode()</code></h2>\n<p>acf_json_encode</p>\n<ul>\n<li>Returns json_encode() ready for file / database use.</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   array $json The array of data to encode.</li>\n<li>@return string</li>\n</ul>\n<h2><code>acf_str_exists()</code></h2>\n<p>acf_str_exists</p>\n<ul>\n<li>This function will return true if a sub string is found</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $needle (string)</li>\n<li>@param $haystack (string)</li>\n<li>@return (boolean)</li>\n</ul>\n<h2><code>acf_debug()</code></h2>\n<p>A legacy function designed for developer debugging.</p>\n<ul>\n<li>@deprecated 6.2.6 Removed for security, but keeping the definition in case third party devs have it in their code.</li>\n<li>@since ACF 5.0.0</li>\n<li>@return false</li>\n</ul>\n<h2><code>acf_debug_start()</code></h2>\n<p>A legacy function designed for developer debugging.</p>\n<ul>\n<li>@deprecated 6.2.6 Removed for security, but keeping the definition in case third party devs have it in their code.</li>\n<li>@since ACF 5.0.0</li>\n<li>@return false</li>\n</ul>\n<h2><code>acf_debug_end()</code></h2>\n<p>A legacy function designed for developer debugging.</p>\n<ul>\n<li>@deprecated 6.2.6 Removed for security, but keeping the definition in case third party devs have it in their code.</li>\n<li>@since ACF 5.0.0</li>\n<li>@return false</li>\n</ul>\n<h2><code>acf_encode_choices()</code></h2>\n<p>acf_encode_choices</p>\n<ul>\n<li>description</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_str_replace()</code></h2>\n<p>acf_str_replace</p>\n<ul>\n<li>This function will replace an array of strings much like str_replace<br />\nThe difference is the extra logic to avoid replacing a string that has already been replaced<br />\nThis is very useful for replacing date characters as they overlap with each other</li>\n<li>@since   ACF 5.3.8</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_split_date_time()</code></h2>\n<p>acf_split_date_time</p>\n<ul>\n<li>This function will split a format string into separate date and time</li>\n<li>@since   ACF 5.3.8</li>\n<li>@param   $date_time (string)</li>\n<li>@return $formats (array)</li>\n</ul>\n<h2><code>acf_convert_date_to_php()</code></h2>\n<p>acf_convert_date_to_php</p>\n<ul>\n<li>This function converts a date format string from JS to PHP</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $date (string)</li>\n<li>@return (string)</li>\n</ul>\n<h2><code>acf_convert_date_to_js()</code></h2>\n<p>acf_convert_date_to_js</p>\n<ul>\n<li>This function converts a date format string from PHP to JS</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $date (string)</li>\n<li>@return (string)</li>\n</ul>\n<h2><code>acf_convert_time_to_php()</code></h2>\n<p>acf_convert_time_to_php</p>\n<ul>\n<li>This function converts a time format string from JS to PHP</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $time (string)</li>\n<li>@return (string)</li>\n</ul>\n<h2><code>acf_convert_time_to_js()</code></h2>\n<p>acf_convert_time_to_js</p>\n<ul>\n<li>This function converts a date format string from PHP to JS</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $time (string)</li>\n<li>@return (string)</li>\n</ul>\n<h2><code>acf_update_user_setting()</code></h2>\n<p>acf_update_user_setting</p>\n<ul>\n<li>description</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_get_user_setting()</code></h2>\n<p>acf_get_user_setting</p>\n<ul>\n<li>description</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_in_array()</code></h2>\n<p>acf_in_array</p>\n<ul>\n<li>description</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_get_valid_post_id()</code></h2>\n<p>acf_get_valid_post_id</p>\n<ul>\n<li>This function will return a valid post_id based on the current screen / parameter</li>\n<li>@since   ACF 5.0.0</li>\n<li>@param   $post_id (mixed)</li>\n<li>@return $post_id (mixed)</li>\n</ul>\n<h2><code>acf_get_post_id_info()</code></h2>\n<p>acf_get_post_id_info</p>\n<ul>\n<li>This function will return the type and id for a given $post_id string</li>\n<li>@since   ACF 5.4.0</li>\n<li>@param   $post_id (mixed)</li>\n<li>@return $info (array)</li>\n</ul>\n<h2><code>acf_isset_termmeta()</code></h2>\n<p>acf_isset_termmeta</p>\n<ul>\n<li>This function will return true if the termmeta table exists<br />\n<a href=\"https://developer.wordpress.org/reference/functions/get_term_meta/\">https://developer.wordpress.org/reference/functions/get_term_meta/</a></li>\n<li>@since   ACF 5.4.0</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_upload_files()</code></h2>\n<p>This function will walk through the $_FILES data and upload each found.</p>\n<ul>\n<li>@since   ACF 5.0.9</li>\n<li>@param array $ancestors An internal parameter, not required.</li>\n</ul>\n<h2><code>acf_upload_file()</code></h2>\n<p>acf_upload_file</p>\n<ul>\n<li>This function will upload a $_FILE</li>\n<li>@since   ACF 5.0.9</li>\n<li>@param   $uploaded_file (array) array found from $_FILE data</li>\n<li>@return $id (int) new attachment ID</li>\n</ul>\n<h2><code>acf_update_nested_array()</code></h2>\n<p>acf_update_nested_array</p>\n<ul>\n<li>This function will update a nested array value. Useful for modifying the $_POST array</li>\n<li>@since   ACF 5.0.9</li>\n<li>@param   $array (array) target array to be updated</li>\n<li>@param $ancestors (array) array of keys to navigate through to find the child</li>\n<li>@param $value (mixed) The new value</li>\n<li>@return (boolean)</li>\n</ul>\n<h2><code>acf_is_screen()</code></h2>\n<p>acf_is_screen</p>\n<ul>\n<li>This function will return true if all args are matched for the current screen</li>\n<li>@since   ACF 5.1.5</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_is_acf_admin_screen()</code></h2>\n<p>Check if we&#8217;re in an ACF admin screen</p>\n<ul>\n<li>@since  ACF 6.2.2</li>\n<li>@return boolean Returns true if the current screen is an ACF admin screen.</li>\n</ul>\n<h2><code>acf_maybe_get()</code></h2>\n<p>acf_maybe_get</p>\n<ul>\n<li>This function will return a var if it exists in an array</li>\n<li>@since   ACF 5.1.5</li>\n<li>@param   $array (array) the array to look within</li>\n<li>@param $key (key) the array key to look for. Nested values may be found using &#8216;/&#8217;</li>\n<li>@param $default (mixed) the value returned if not found</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_get_attachment()</code></h2>\n<p>Returns an array of attachment data.</p>\n<ul>\n<li>@since   ACF 5.1.5</li>\n<li>@param   integer|<a href=\"https://developer.wordpress.org/reference/classes/wp_post/\" rel=\"class\">WP_Post</a> The attachment ID or object</li>\n<li>@return array|false</li>\n</ul>\n<h2><code>acf_get_truncated()</code></h2>\n<p>This function will truncate and return a string</p>\n<ul>\n<li>@since   ACF 5.0.0</li>\n<li>@param string  $text   The text to truncate.</li>\n<li>@param integer $length The number of characters to allow in the string.</li>\n<li>@return  string</li>\n</ul>\n<h2><code>acf_current_user_can_admin()</code></h2>\n<p>acf_current_user_can_admin</p>\n<ul>\n<li>This function will return true if the current user can administrate the ACF field groups</li>\n<li>@since   ACF 5.1.5</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_current_user_can_edit_post()</code></h2>\n<p>Wrapper function for current_user_can( &#8216;edit_post&#8217;, $post_id ).</p>\n<ul>\n<li>@since ACF 6.3.4</li>\n<li>@param integer $post_id The post ID to check.</li>\n<li>@return boolean</li>\n</ul>\n<h2><code>acf_get_filesize()</code></h2>\n<p>acf_get_filesize</p>\n<ul>\n<li>This function will return a numeric value of bytes for a given filesize string</li>\n<li>@since   ACF 5.1.5</li>\n<li>@param   $size (mixed)</li>\n<li>@return (int)</li>\n</ul>\n<h2><code>acf_format_filesize()</code></h2>\n<p>acf_format_filesize</p>\n<ul>\n<li>This function will return a formatted string containing the filesize and unit</li>\n<li>@since   ACF 5.1.5</li>\n<li>@param   $size (mixed)</li>\n<li>@return (int)</li>\n</ul>\n<h2><code>acf_get_valid_terms()</code></h2>\n<p>acf_get_valid_terms</p>\n<ul>\n<li>This function will replace old terms with new split term ids</li>\n<li>@since   ACF 5.1.5</li>\n<li>@param   $terms (int|array)</li>\n<li>@param $taxonomy (string)</li>\n<li>@return $terms</li>\n</ul>\n<h2><code>acf_validate_attachment()</code></h2>\n<p>acf_validate_attachment</p>\n<ul>\n<li>This function will validate an attachment based on a field&#8217;s restrictions and return an array of errors</li>\n<li>@since   ACF 5.2.3</li>\n<li>@param   $attachment (array) attachment data. Changes based on context</li>\n<li>@param $field (array) field settings containing restrictions</li>\n<li>@param context (string)                                     $file is different when uploading / preparing</li>\n<li>@return $errors (array)</li>\n</ul>\n<h2><code>acf_translate()</code></h2>\n<p>acf_translate</p>\n<ul>\n<li>This function will translate a string using the new &#8216;l10n_textdomain&#8217; setting<br />\nAlso works for arrays which is great for fields &#8211; select -&gt; choices</li>\n<li>@since   ACF 5.3.2</li>\n<li>@param   mixed $string String or array containing strings to be translated.</li>\n<li>@return mixed</li>\n</ul>\n<h2><code>acf_maybe_add_action()</code></h2>\n<p>acf_maybe_add_action</p>\n<ul>\n<li>This function will determine if the action has already run before adding / calling the function</li>\n<li>@since   ACF 5.3.2</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_is_row_collapsed()</code></h2>\n<p>acf_is_row_collapsed</p>\n<ul>\n<li>This function will return true if the field&#8217;s row is collapsed</li>\n<li>@since   ACF 5.3.2</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_get_attachment_image()</code></h2>\n<p>Return an image tag for the provided attachment ID</p>\n<ul>\n<li>@since ACF 5.5.0</li>\n<li>@deprecated 6.3.2</li>\n<li>@param integer $attachment_id The attachment ID</li>\n<li>@param string  $size          The image size to use in the image tag.</li>\n<li>@return false</li>\n</ul>\n<h2><code>acf_get_post_thumbnail()</code></h2>\n<p>acf_get_post_thumbnail</p>\n<ul>\n<li>This function will return a thumbnail image url for a given post</li>\n<li>@since   ACF 5.3.8</li>\n<li>@param   $post (obj)</li>\n<li>@param $size (mixed)</li>\n<li>@return (string)</li>\n</ul>\n<h2><code>acf_get_browser()</code></h2>\n<p>acf_get_browser</p>\n<ul>\n<li>Returns the name of the current browser.</li>\n<li>@since   ACF 5.0.0</li>\n<li>@return  string</li>\n</ul>\n<h2><code>acf_is_ajax()</code></h2>\n<p>acf_is_ajax</p>\n<ul>\n<li>This function will return true if performing a wp ajax call</li>\n<li>@since   ACF 5.3.8</li>\n<li>@param   n/a</li>\n<li>@return (boolean)</li>\n</ul>\n<h2><code>acf_format_date()</code></h2>\n<p>Returns a date value in a formatted string.</p>\n<ul>\n<li>@since ACF 5.3.8</li>\n<li>@param string $value  The date value to format.</li>\n<li>@param string $format The format to use.</li>\n<li>@return string</li>\n</ul>\n<h2><code>acf_clear_log()</code></h2>\n<p>Previously, deletes the debug.log file.</p>\n<ul>\n<li>@since      ACF 5.7.10</li>\n<li>@deprecated 6.2.7</li>\n</ul>\n<h2><code>acf_log()</code></h2>\n<p>acf_log</p>\n<ul>\n<li>description</li>\n<li>@since   ACF 5.3.8</li>\n<li>@param   $post_id (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_dev_log()</code></h2>\n<p>acf_dev_log</p>\n<ul>\n<li>Used to log variables only if ACF_DEV is defined</li>\n<li>@since   ACF 5.7.4</li>\n<li>@param   mixed</li>\n<li>@return void</li>\n</ul>\n<h2><code>acf_doing()</code></h2>\n<p>acf_doing</p>\n<ul>\n<li>This function will tell ACF what task it is doing</li>\n<li>@since   ACF 5.3.8</li>\n<li>@param   $event (string)</li>\n<li>@param context (string)</li>\n<li>@return n/a</li>\n</ul>\n<h2><code>acf_is_doing()</code></h2>\n<p>acf_is_doing</p>\n<ul>\n<li>This function can be used to state what ACF is doing, or to check</li>\n<li>@since   ACF 5.3.8</li>\n<li>@param   $event (string)</li>\n<li>@param context (string)</li>\n<li>@return (boolean)</li>\n</ul>\n<h2><code>acf_is_plugin_active()</code></h2>\n<p>acf_is_plugin_active</p>\n<ul>\n<li>This function will return true if the ACF plugin is active</li>\n<li>May be included within a theme or other plugin</p>\n</li>\n<li>\n<p>@since   ACF 5.4.0</p>\n</li>\n<li>@param   $basename (int)</li>\n<li>@return $post_id (int)</li>\n</ul>\n<h2><code>acf_send_ajax_results()</code></h2>\n<p>acf_send_ajax_results</p>\n<ul>\n<li>This function will print JSON data for a Select2 AJAX query</li>\n<li>@since   ACF 5.4.0</li>\n<li>@param   $response (array)</li>\n<li>@return n/a</li>\n</ul>\n<h2><code>acf_is_sequential_array()</code></h2>\n<p>acf_is_sequential_array</p>\n<ul>\n<li>This function will return true if the array contains only numeric keys</li>\n<li>@source  <a href=\"http://stackoverflow.com/questions/173400/how-to-check-if-php-array-is-associative-or-sequential\">http://stackoverflow.com/questions/173400/how-to-check-if-php-array-is-associative-or-sequential</a></li>\n<li>@since   ACF 5.4.0</li>\n<li>@param   $array (array)</li>\n<li>@return (boolean)</li>\n</ul>\n<h2><code>acf_is_associative_array()</code></h2>\n<p>acf_is_associative_array</p>\n<ul>\n<li>This function will return true if the array contains one or more string keys</li>\n<li>@source  <a href=\"http://stackoverflow.com/questions/173400/how-to-check-if-php-array-is-associative-or-sequential\">http://stackoverflow.com/questions/173400/how-to-check-if-php-array-is-associative-or-sequential</a></li>\n<li>@since   ACF 5.4.0</li>\n<li>@param   $array (array)</li>\n<li>@return (boolean)</li>\n</ul>\n<h2><code>acf_add_array_key_prefix()</code></h2>\n<p>acf_add_array_key_prefix</p>\n<ul>\n<li>This function will add a prefix to all array keys<br />\nUseful to preserve numeric keys when performing array_multisort</li>\n<li>@since   ACF 5.4.0</li>\n<li>@param   $array (array)</li>\n<li>@param $prefix (string)</li>\n<li>@return (array)</li>\n</ul>\n<h2><code>acf_remove_array_key_prefix()</code></h2>\n<p>acf_remove_array_key_prefix</p>\n<ul>\n<li>This function will remove a prefix to all array keys<br />\nUseful to preserve numeric keys when performing array_multisort</li>\n<li>@since   ACF 5.4.0</li>\n<li>@param   $array (array)</li>\n<li>@param $prefix (string)</li>\n<li>@return (array)</li>\n</ul>\n<h2><code>acf_connect_attachment_to_post()</code></h2>\n<p>This function will connect an attachment (image etc) to the post<br />\nUsed to connect attachments uploaded directly to media that have not been attached to a post</p>\n<ul>\n<li>@since   ACF 5.8.0 Added filter to prevent connection.</li>\n<li>@since ACF 5.5.4</li>\n<li>@param   integer $attachment_id The attachment ID.</li>\n<li>@param integer $post_id       The post ID.</li>\n<li>@return boolean True if attachment was connected.</li>\n</ul>\n<h2><code>acf_encrypt()</code></h2>\n<p>acf_encrypt</p>\n<ul>\n<li>This function will encrypt a string using PHP<br />\n<a href=\"https://bhoover.com/using-php-openssl_encrypt-openssl_decrypt-encrypt-decrypt-data/\">https://bhoover.com/using-php-openssl_encrypt-openssl_decrypt-encrypt-decrypt-data/</a></li>\n<li>@since   ACF 5.5.8</li>\n<li>@param   $data (string)</li>\n<li>@return (string)</li>\n</ul>\n<h2><code>acf_decrypt()</code></h2>\n<p>acf_decrypt</p>\n<ul>\n<li>This function will decrypt an encrypted string using PHP<br />\n<a href=\"https://bhoover.com/using-php-openssl_encrypt-openssl_decrypt-encrypt-decrypt-data/\">https://bhoover.com/using-php-openssl_encrypt-openssl_decrypt-encrypt-decrypt-data/</a></li>\n<li>@since   ACF 5.5.8</li>\n<li>@param   $data (string)</li>\n<li>@return (string)</li>\n</ul>\n<h2><code>acf_parse_markdown()</code></h2>\n<p>acf_parse_markdown</p>\n<ul>\n<li>A very basic regex-based Markdown parser function based off <a href=\"https://gist.github.com/jbroadway/2836900\">slimdown</a>.</li>\n<li>@since   ACF 5.7.2</li>\n<li>@param   string $text The string to parse.</li>\n<li>@return string</li>\n</ul>\n<h2><code>acf_get_sites()</code></h2>\n<p>acf_get_sites</p>\n<ul>\n<li>Returns an array of sites for a network.</li>\n<li>@since   ACF 5.4.0</li>\n<li>@return  array</li>\n</ul>\n<h2><code>acf_convert_rules_to_groups()</code></h2>\n<p>acf_convert_rules_to_groups</p>\n<ul>\n<li>Converts an array of rules from ACF4 to an array of groups for ACF5</li>\n<li>@since   ACF 5.7.4</li>\n<li>@param   array  $rules    An array of rules.</li>\n<li>@param string $anyorall The anyorall setting used in ACF4. Defaults to &#8216;any&#8217;.</li>\n<li>@return array</li>\n</ul>\n<h2><code>acf_register_ajax()</code></h2>\n<p>acf_register_ajax</p>\n<ul>\n<li>Registers an ajax callback.</li>\n<li>@since   ACF 5.7.7</li>\n<li>@param   string  $name     The ajax action name.</li>\n<li>@param array   $callback The callback function or array.</li>\n<li>@param boolean $public   Whether to allow access to non logged in users.</li>\n<li>@return void</li>\n</ul>\n<h2><code>acf_str_camel_case()</code></h2>\n<p>acf_str_camel_case</p>\n<ul>\n<li>Converts a string into camelCase.<br />\nThanks to <a href=\"https://stackoverflow.com/questions/31274782/convert-array-keys-from-underscore-case-to-camelcase-recursively\">https://stackoverflow.com/questions/31274782/convert-array-keys-from-underscore-case-to-camelcase-recursively</a></li>\n<li>@since   ACF 5.8.0</li>\n<li>@param   string $string The string ot convert.</li>\n<li>@return string</li>\n</ul>\n<h2><code>acf_array_camel_case()</code></h2>\n<p>acf_array_camel_case</p>\n<ul>\n<li>Converts all array keys to camelCase.</li>\n<li>@since   ACF 5.8.0</li>\n<li>@param   array $array The array to convert.</li>\n<li>@return array</li>\n</ul>\n<h2><code>acf_is_block_editor()</code></h2>\n<p>Returns true if the current screen is using the block editor.</p>\n<ul>\n<li>@since ACF 5.8.0</li>\n<li>@return boolean</li>\n</ul>\n<h2><code>acf_get_wp_reserved_terms()</code></h2>\n<p>Return an array of the WordPress reserved terms</p>\n<ul>\n<li>@since ACF 6.1</li>\n<li>@return array The WordPress reserved terms list.</li>\n</ul>\n<h2><code>acf_is_multisite_sub_site()</code></h2>\n<p>Detect if we&#8217;re on a multisite subsite.</p>\n<ul>\n<li>@since ACF 6.2.4</li>\n<li>@return boolean true if we&#8217;re in a multisite install and not on the main site</li>\n</ul>\n<h2><code>acf_is_multisite_main_site()</code></h2>\n<p>Detect if we&#8217;re on a multisite main site.</p>\n<ul>\n<li>@since ACF 6.2.4</li>\n<li>@return boolean true if we&#8217;re in a multisite install and on the main site</li>\n</ul>\n<hr />\n",
        "protected": false
    },
    "author": 0,
    "featured_media": 0,
    "parent": 156769,
    "menu_order": 0,
    "template": "",
    "meta": {
        "footnotes": ""
    },
    "class_list": [
        "post-157166",
        "scf-handbook",
        "type-scf-handbook",
        "status-publish",
        "hentry",
        "type-handbook"
    ],
    "revision_note": "",
    "jetpack_sharing_enabled": true,
    "_links": {
        "self": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/scf-handbook/157166",
                "targetHints": {
                    "allow": [
                        "GET"
                    ]
                }
            }
        ],
        "collection": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/scf-handbook"
            }
        ],
        "about": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/types/scf-handbook"
            }
        ],
        "version-history": [
            {
                "count": 4,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/scf-handbook/157166/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 159005,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/scf-handbook/157166/revisions/159005"
            }
        ],
        "up": [
            {
                "embeddable": true,
                "href": "https://developer.wordpress.org/wp-json/wp/v2/scf-handbook/156769"
            }
        ],
        "wp:attachment": [
            {
                "href": "https://developer.wordpress.org/wp-json/wp/v2/media?parent=157166"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https://api.w.org/{rel}",
                "templated": true
            }
        ]
    }
}